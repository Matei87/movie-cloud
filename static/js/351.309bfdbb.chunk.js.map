{"version":3,"file":"static/js/351.309bfdbb.chunk.js","mappings":"uPAUMA,EAAiB,mCA4ZvB,EA1Ze,WACb,OACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADLC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,KAAMC,EAA7C,EAA6CA,QAGvCC,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,MAAO,IACPC,cAAe,IACfC,cAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,MAMlBO,EAAc,GACdC,EAAa,GACbC,EAAe,GACfC,EAAY,GACZC,EAAc,GACdC,EAAU,GAEVC,EAAW,GACXC,EAAU,GACVC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAO,GA+Lb,OA7LyB,WACvB,IAsJIC,EAtJEC,EAAkB,CACtBC,OAAQ,CACN,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,aAKNC,EAAc,CAClBH,OAAQ,CACN,CACEC,GAAI,MACJC,KAAM,sBAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,oBAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,QAER,CACED,GAAI,MACJC,KAAM,kBAER,CACED,GAAI,GACJC,KAAM,aAMC,UAAT7B,IACFyB,EAAa3B,EAAeiC,MAAM,EAAG,IAAM,KACzBL,EAAgBC,QAChCF,EAAWO,SAAQ,SAACC,GAClBA,EAAKC,UAAYR,EAAgBC,OAC9BQ,QAAO,SAACC,GAAD,OAAOA,EAAER,KAAOK,EAAKC,UAAU,MACtCG,KAAI,SAACD,GAAD,OAAOvB,EAAYyB,KAAKF,EAAEP,SACjCf,EAAWwB,KAAKL,EAAKM,OACrBvB,EAAUsB,KAAKL,EAAKO,aAAaT,MAAM,EAAG,IAC1ChB,EAAauB,KAAKL,EAAKQ,eAAiBR,EAAKS,aAC7CzB,EAAYqB,KAAKL,EAAKU,cACtBzB,EAAQoB,KAAKL,EAAKL,OAKX,OAAT5B,IACFyB,EAAa1B,EAAcgC,MAAM,EAAG,IAAM,KAExBD,EAAYH,QAC5BF,EAAWO,SAAQ,SAACC,GAClBA,EAAKC,UAAYJ,EAAYH,OAC1BQ,QAAO,SAACC,GAAD,OAAOA,EAAER,KAAOK,EAAKC,UAAU,MACtCG,KAAI,SAACD,GAAD,OAAOjB,EAASmB,KAAKF,EAAEP,SAC9BT,EAAQkB,KAAKL,EAAKJ,MAClBP,EAAOgB,KAAKL,EAAKW,eAAeb,MAAM,EAAG,IACzCV,EAAUiB,KAAKL,EAAKQ,eAAiBR,EAAKS,aAC1CnB,EAASe,KAAKL,EAAKU,cACnBnB,EAAKc,KAAKL,EAAKL,OAOvBiB,IAGE,+BACe,IAAZ5C,GACC,iBAAK6C,UAAU,SAAf,UACY,UAAT9C,GACC,gBAAK8C,UAAU,wBAAf,UACE,gBAAKA,UAAU,oBAAf,UACE,UAAC,KAAD,kBAAY5C,GAAZ,eACE,gBAAK4C,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoB9B,EAAQ,IACpC+B,MAAO,CAAErB,GAAIV,EAAQ,KAHzB,WAME,gBACEgC,IAAKvD,EAAiBoB,EAAa,GACnCoC,IAAKrC,EAAW,MAElB,iBAAKgC,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,uBACA,iBAAMA,UAAU,oBAAhB,SACGhC,EAAW,MAEd,kBAAMgC,UAAU,qBAAhB,UACGjC,EAAY,GADf,MACsBG,EAAU,GADhC,MACuCC,EAAY,GAAI,IADvD,qBAQN,gBAAK6B,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoB9B,EAAQ,IACpC+B,MAAO,CAAErB,GAAIV,EAAQ,KAHzB,WAME,gBACEgC,IAAKvD,EAAiBoB,EAAa,GACnCoC,IAAKrC,EAAW,MAElB,iBAAKgC,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,uBACA,iBAAMA,UAAU,oBAAhB,SACGhC,EAAW,MAEd,kBAAMgC,UAAU,qBAAhB,UACGjC,EAAY,GADf,MACsBG,EAAU,GADhC,MACuCC,EAAY,GAAI,IADvD,qBAQN,gBAAK6B,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoB9B,EAAQ,IACpC+B,MAAO,CAAErB,GAAIV,EAAQ,KAHzB,WAME,gBACEgC,IAAKvD,EAAiBoB,EAAa,GACnCoC,IAAKrC,EAAW,MAElB,iBAAKgC,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,uBACA,iBAAMA,UAAU,oBAAhB,SACGhC,EAAW,MAEd,kBAAMgC,UAAU,qBAAhB,UACGjC,EAAY,GADf,MACsBG,EAAU,GADhC,MACuCC,EAAY,GAAI,IADvD,4BAUV,KAEM,OAATjB,GACC,gBAAK8C,UAAU,wBAAf,UACE,gBAAKA,UAAU,oBAAf,UACE,UAAC,KAAD,kBAAY5C,GAAZ,eACE,gBAAK4C,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBxB,EAAK,IAC9ByB,MAAO,CAAErB,GAAIJ,EAAK,KAHtB,WAME,gBACE0B,IAAKvD,EAAiB0B,EAAU,GAChC8B,IAAK/B,EAAQ,MAEf,iBAAK0B,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,2BACA,iBAAMA,UAAU,oBAAhB,SAAqC1B,EAAQ,MAC7C,kBAAM0B,UAAU,qBAAhB,UACG3B,EAAS,GADZ,MACmBG,EAAO,GAD1B,MACiCC,EAAS,GAD1C,sBAON,gBAAKuB,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBxB,EAAK,IAC9ByB,MAAO,CAAErB,GAAIJ,EAAK,KAHtB,WAME,gBACE0B,IAAKvD,EAAiB0B,EAAU,GAChC8B,IAAK/B,EAAQ,MAEf,iBAAK0B,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,2BACA,iBAAMA,UAAU,oBAAhB,SAAqC1B,EAAQ,MAC7C,kBAAM0B,UAAU,qBAAhB,UACG3B,EAAS,GADZ,MACmBG,EAAO,GAD1B,MACiCC,EAAS,GAD1C,sBAON,gBAAKuB,UAAU,cAAf,UACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBxB,EAAK,IAC9ByB,MAAO,CAAErB,GAAIJ,EAAK,KAHtB,WAME,gBACE0B,IAAKvD,EAAiB0B,EAAU,GAChC8B,IAAK/B,EAAQ,MAEf,iBAAK0B,UAAU,YAAf,WACE,iBAAMA,UAAU,eAAhB,2BACA,iBAAMA,UAAU,oBAAhB,SAAqC1B,EAAQ,MAC7C,kBAAM0B,UAAU,qBAAhB,UACG3B,EAAS,GADZ,MACmBG,EAAO,GAD1B,MACiCC,EAAS,GAD1C,6BASV,SAGN,SAAC6B,EAAA,EAAD,O,SCzWR,EAlDyB,WACvB,OAAkDxD,EAAAA,EAAAA,YAAWC,EAAAA,GAArDG,EAAR,EAAQA,KAAMqD,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAAUrD,EAAtC,EAAsCA,QACtC,GAAwBsD,EAAAA,EAAAA,UAAS1D,EAAAA,GAAjC,eAAa2D,GAAb,WAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACHzD,GACH0D,aAAaC,QAAQ,OAAQ3D,IAASqD,MAEvC,KAEHI,EAAAA,EAAAA,YAAU,WACK,UAATzD,EACFqD,IACkB,OAATrD,GACTsD,MAED,KAGD,+BACe,IAAZrD,GACC,iBAAK6C,UAAU,uBAAf,WACE,mBACEA,UAAS,mCACE,UAAT9C,EAAmB,eAAiB,MAEtC4D,QAAS,WACPP,IACAG,EAAQ,CAAExD,KAAM,WANpB,qBAWA,mBACE8C,UAAS,mCACE,OAAT9C,EAAgB,eAAiB,MAEnC4D,QAAS,WACPN,IACAE,EAAQ,CAAExD,KAAM,QANpB,yBAYA,Q,8BCqTV,EA1VyB,WACvB,IAaI6D,EAbJ,GAWIjE,EAAAA,EAAAA,YAAWC,EAAAA,GAVbC,EADF,EACEA,eACAgE,EAFF,EAEEA,cACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,eACAjE,EALF,EAKEA,cACAkE,EANF,EAMEA,UACAC,EAPF,EAOEA,WACAC,EARF,EAQEA,WACAnE,EATF,EASEA,KACAC,EAVF,EAUEA,QA0UF,MAtUa,UAATD,IACF6D,GACE,iCACE,iBAAKf,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,yBAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACGJ,EAAeuC,KAAI,SAACwB,GAAD,OAClB,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoBa,EAAQjC,IACpCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQtB,WAGjB,gBAAKO,UAAU,cAAf,UACE,0BACE,6BACE,SAAC,MAAD,IACEe,EAAQrB,cACRqB,EAAQrB,aAAaT,MAAM,EAAG,IAC9B,UAEJ,6BACE,SAAC,MAAD,IADF,IACiB8B,EAAQlB,uBAvBJkB,EAAQjC,gBAiC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,wBAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACG4D,EAAczB,KAAI,SAACwB,GAAD,OACjB,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoBa,EAAQjC,IACpCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQtB,WAGjB,gBAAKO,UAAU,cAAf,UACE,0BACE,6BACE,SAAC,MAAD,IACCe,EAAQrB,cACPqB,EAAQrB,aAAaT,MAAM,EAAG,OAElC,6BACE,SAAC,MAAD,IADF,IACiB8B,EAAQlB,cAAgB,YAtBpBkB,EAAQjC,gBAgC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,4BAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACG6D,EAAiB1B,KAAI,SAACwB,GAAD,OACpB,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoBa,EAAQjC,IACpCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQtB,WAGjB,gBAAKO,UAAU,cAAf,UACE,yBACGe,EAAQrB,cACP,6BACE,SAAC,MAAD,IADF,IACeqB,EAAQrB,aAAaT,MAAM,EAAG,MAE3C,KACH8B,EAAQlB,cACP,6BACE,SAAC,MAAD,IADF,IACiBkB,EAAQlB,cAAgB,KAEvC,YAzBiBkB,EAAQjC,gBAkC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,0BAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACG8D,EAAe3B,KAAI,SAACwB,GAAD,OAClB,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,kBAAD,OAAoBa,EAAQjC,IACpCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQtB,WAGjB,gBAAKO,UAAU,cAAf,UACE,0BACE,6BACE,SAAC,MAAD,IADF,IACee,EAAQrB,aAAaT,MAAM,EAAG,OAE7C,6BACE,SAAC,MAAD,IADF,IACiB8B,EAAQlB,cAAgB,YApBpBkB,EAAQjC,mBAgCpC,OAAT5B,IACF6D,GACE,iCACE,iBAAKf,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,6BAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACGH,EAAcsC,KAAI,SAACwB,GAAD,OACjB,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBa,EAAQjC,IACjCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQhC,UAGjB,gBAAKiB,UAAU,cAAf,UACE,yBACGe,EAAQjB,gBACP,6BACE,SAAC,MAAD,IADF,IACeiB,EAAQjB,eAAeb,MAAM,EAAG,MAE7C,KACH8B,EAAQlB,cACP,6BACE,SAAC,MAAD,IADF,IACiBkB,EAAQlB,cAAgB,KAEvC,YAzBiBkB,EAAQjC,gBAkC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,wBAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACG+D,EAAU5B,KAAI,SAACwB,GAAD,OACb,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBa,EAAQjC,IACjCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQhC,UAGjB,gBAAKiB,UAAU,cAAf,UACE,0BACE,6BACE,SAAC,MAAD,IACCe,EAAQjB,gBACPiB,EAAQjB,eAAeb,MAAM,EAAG,OAEpC,6BACE,SAAC,MAAD,IADF,IACiB8B,EAAQlB,cAAgB,YAtBpBkB,EAAQjC,gBAgC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,2BAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACGgE,EAAW7B,KAAI,SAACwB,GAAD,OACd,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBa,EAAQjC,IACjCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQhC,UAGjB,gBAAKiB,UAAU,cAAf,UACE,yBACGe,EAAQjB,gBACP,6BACE,SAAC,MAAD,IADF,IACeiB,EAAQjB,eAAeb,MAAM,EAAG,MAE7C,KACH8B,EAAQlB,cACP,6BACE,SAAC,MAAD,IADF,IACiBkB,EAAQlB,cAAgB,KAEvC,YAzBiBkB,EAAQjC,gBAkC3C,iBAAKkB,UAAU,iBAAf,WACE,gBAAKA,UAAU,mBAAf,UACE,eAAIA,UAAU,0BAAd,0BAEF,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,kBAAY5C,EAAAA,GAAZ,aACGiE,EAAW9B,KAAI,SAACwB,GAAD,OACd,iBAAKf,UAAU,OAAf,WACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,OAAiBa,EAAQjC,IACjCqB,MAAO,CAAErB,GAAIiC,EAAQjC,KAHzB,UAME,gBACEsB,IACE,kCAAoCW,EAAQnB,YAE9CS,IAAKU,EAAQhC,UAGjB,gBAAKiB,UAAU,cAAf,UACE,0BACE,6BACE,SAAC,MAAD,IADF,IACee,EAAQjB,eAAeb,MAAM,EAAG,OAE/C,6BACE,SAAC,MAAD,IADF,IACiB8B,EAAQlB,cAAgB,YApBpBkB,EAAQjC,oBAkC/C,gBAAKkB,UAAU,oBAAf,UAAgD,IAAZ7C,EAAmB4D,EAAU,QCnVrE,EAViB,WACf,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,S,mBC8BJ,IAzCe,CACb1D,MAAM,EACNC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,MAAO,IACPC,cAAe,IACfC,cAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB","sources":["components/Header/Header.jsx","components/MoviesController/MoviesController.jsx","components/MovieTvContainer/MovieTvContainer.jsx","components/Homepage/Homepage.jsx","components/shared/settings/settings.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport './Header.css';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst MOVIE_BACKDROP = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst Header = () => {\r\n  const { moviesUpcoming, tvAiringToday, type, loading } =\r\n    useContext(MovieContext);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    speed: 3000,\r\n    autoplaySpeed: 8000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const movieGenres = [];\r\n  const movieTitle = [];\r\n  const moviePicture = [];\r\n  const movieYear = [];\r\n  const movieRating = [];\r\n  const movieId = [];\r\n\r\n  const tvGenres = [];\r\n  const tvTitle = [];\r\n  const tvPicture = [];\r\n  const tvYear = [];\r\n  const tvRating = [];\r\n  const tvId = [];\r\n\r\n  const handleBackground = () => {\r\n    const moviesGenreList = {\r\n      genres: [\r\n        {\r\n          id: 28,\r\n          name: 'Action',\r\n        },\r\n        {\r\n          id: 12,\r\n          name: 'Adventure',\r\n        },\r\n        {\r\n          id: 16,\r\n          name: 'Animation',\r\n        },\r\n        {\r\n          id: 35,\r\n          name: 'Comedy',\r\n        },\r\n        {\r\n          id: 80,\r\n          name: 'Crime',\r\n        },\r\n        {\r\n          id: 99,\r\n          name: 'Documentary',\r\n        },\r\n        {\r\n          id: 18,\r\n          name: 'Drama',\r\n        },\r\n        {\r\n          id: 10751,\r\n          name: 'Family',\r\n        },\r\n        {\r\n          id: 14,\r\n          name: 'Fantasy',\r\n        },\r\n        {\r\n          id: 36,\r\n          name: 'History',\r\n        },\r\n        {\r\n          id: 27,\r\n          name: 'Horror',\r\n        },\r\n        {\r\n          id: 10402,\r\n          name: 'Music',\r\n        },\r\n        {\r\n          id: 9648,\r\n          name: 'Mystery',\r\n        },\r\n        {\r\n          id: 10749,\r\n          name: 'Romance',\r\n        },\r\n        {\r\n          id: 878,\r\n          name: 'Science Fiction',\r\n        },\r\n        {\r\n          id: 10770,\r\n          name: 'TV Movie',\r\n        },\r\n        {\r\n          id: 53,\r\n          name: 'Thriller',\r\n        },\r\n        {\r\n          id: 10752,\r\n          name: 'War',\r\n        },\r\n        {\r\n          id: 37,\r\n          name: 'Western',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const tvGenreList = {\r\n      genres: [\r\n        {\r\n          id: 10759,\r\n          name: 'Action & Adventure',\r\n        },\r\n        {\r\n          id: 16,\r\n          name: 'Animation',\r\n        },\r\n        {\r\n          id: 35,\r\n          name: 'Comedy',\r\n        },\r\n        {\r\n          id: 80,\r\n          name: 'Crime',\r\n        },\r\n        {\r\n          id: 99,\r\n          name: 'Documentary',\r\n        },\r\n        {\r\n          id: 18,\r\n          name: 'Drama',\r\n        },\r\n        {\r\n          id: 10751,\r\n          name: 'Family',\r\n        },\r\n        {\r\n          id: 10762,\r\n          name: 'Kids',\r\n        },\r\n        {\r\n          id: 9648,\r\n          name: 'Mystery',\r\n        },\r\n        {\r\n          id: 10763,\r\n          name: 'News',\r\n        },\r\n        {\r\n          id: 10764,\r\n          name: 'Reality',\r\n        },\r\n        {\r\n          id: 10765,\r\n          name: 'Sci-Fi & Fantasy',\r\n        },\r\n        {\r\n          id: 10766,\r\n          name: 'Soap',\r\n        },\r\n        {\r\n          id: 10767,\r\n          name: 'Talk',\r\n        },\r\n        {\r\n          id: 10768,\r\n          name: 'War & Politics',\r\n        },\r\n        {\r\n          id: 37,\r\n          name: 'Western',\r\n        },\r\n      ],\r\n    };\r\n\r\n    let background;\r\n    if (type === 'movie') {\r\n      background = moviesUpcoming.slice(0, 3) || [];\r\n      if (background && moviesGenreList.genres) {\r\n        background.forEach((item) => {\r\n          item.genre_ids = moviesGenreList.genres\r\n            .filter((x) => x.id === item.genre_ids[0])\r\n            .map((x) => movieGenres.push(x.name));\r\n          movieTitle.push(item.title);\r\n          movieYear.push(item.release_date.slice(0, 4));\r\n          moviePicture.push(item.backdrop_path || item.poster_path);\r\n          movieRating.push(item.vote_average);\r\n          movieId.push(item.id);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (type === 'tv') {\r\n      background = tvAiringToday.slice(0, 3) || [];\r\n\r\n      if (background && tvGenreList.genres) {\r\n        background.forEach((item) => {\r\n          item.genre_ids = tvGenreList.genres\r\n            .filter((x) => x.id === item.genre_ids[0])\r\n            .map((x) => tvGenres.push(x.name));\r\n          tvTitle.push(item.name);\r\n          tvYear.push(item.first_air_date.slice(0, 4));\r\n          tvPicture.push(item.backdrop_path || item.poster_path);\r\n          tvRating.push(item.vote_average);\r\n          tvId.push(item.id);\r\n        });\r\n      }\r\n    }\r\n    return background;\r\n  };\r\n\r\n  handleBackground();\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className='header'>\r\n          {type === 'movie' ? (\r\n            <div className='main_container_header'>\r\n              <div className='container-content'>\r\n                <Slider {...settings}>\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/movie/${movieId[0]}`,\r\n                        state: { id: movieId[0] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[0]}\r\n                        alt={movieTitle[0]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[0]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[0]} | {movieYear[0]} | {movieRating[0]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/movie/${movieId[1]}`,\r\n                        state: { id: movieId[1] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[1]}\r\n                        alt={movieTitle[1]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[1]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[1]} | {movieYear[1]} | {movieRating[1]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/movie/${movieId[2]}`,\r\n                        state: { id: movieId[2] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[2]}\r\n                        alt={movieTitle[2]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[2]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[2]} | {movieYear[2]} | {movieRating[2]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {type === 'tv' ? (\r\n            <div className='main_container_header'>\r\n              <div className='container-content'>\r\n                <Slider {...settings}>\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/tv/${tvId[0]}`,\r\n                        state: { id: tvId[0] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[0]}\r\n                        alt={tvTitle[0]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[0]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[0]} | {tvYear[0]} | {tvRating[0]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/tv/${tvId[1]}`,\r\n                        state: { id: tvId[1] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[1]}\r\n                        alt={tvTitle[1]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[1]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[1]} | {tvYear[1]} | {tvRating[1]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/details/tv/${tvId[2]}`,\r\n                        state: { id: tvId[2] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[2]}\r\n                        alt={tvTitle[2]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[2]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[2]} | {tvYear[2]} | {tvRating[2]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport './MoviesController.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\n\r\nconst MoviesController = () => {\r\n  const { type, handleMovies, handleTV, loading } = useContext(MovieContext);\r\n  const [data, setData] = useState(MovieContext);\r\n\r\n  useEffect(() => {\r\n    if (!type) {\r\n      localStorage.setItem('type', type) || handleMovies();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (type === 'movie') {\r\n      handleMovies();\r\n    } else if (type === 'tv') {\r\n      handleTV();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className='MoviesOrTv container'>\r\n          <button\r\n            className={` btn btn-outline-primary ${\r\n              type === 'movie' ? 'btn-selected' : null\r\n            }`}\r\n            onClick={() => {\r\n              handleMovies();\r\n              setData({ type: 'movie' });\r\n            }}\r\n          >\r\n            MOVIES\r\n          </button>\r\n          <button\r\n            className={` btn btn-outline-primary ${\r\n              type === 'tv' ? 'btn-selected' : null\r\n            }`}\r\n            onClick={() => {\r\n              handleTV();\r\n              setData({ type: 'tv' });\r\n            }}\r\n          >\r\n            TV SHOWS\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesController;\r\n","import { useContext } from 'react';\r\nimport './MovieTvContainer.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { Link } from 'react-router-dom';\r\nimport settings from '../shared/settings/settings';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nimport { IoIosStar } from 'react-icons/io';\r\nimport { HiClock } from 'react-icons/hi';\r\n\r\nconst MovieTvContainer = () => {\r\n  const {\r\n    moviesUpcoming,\r\n    moviesPopular,\r\n    moviesNowPlaying,\r\n    moviesTopRated,\r\n    tvAiringToday,\r\n    tvPopular,\r\n    tvOnTheAir,\r\n    tvTopRated,\r\n    type,\r\n    loading,\r\n  } = useContext(MovieContext);\r\n\r\n  let content;\r\n  if (type === 'movie') {\r\n    content = (\r\n      <>\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Upcoming</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {moviesUpcoming.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/movie/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.title}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      <span>\r\n                        <HiClock />\r\n                        {(content.release_date &&\r\n                          content.release_date.slice(0, 4)) ||\r\n                          'N/A'}\r\n                      </span>\r\n                      <span>\r\n                        <IoIosStar /> {content.vote_average}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Popular</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {moviesPopular.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/movie/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.title}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      <span>\r\n                        <HiClock />\r\n                        {content.release_date &&\r\n                          content.release_date.slice(0, 4)}\r\n                      </span>\r\n                      <span>\r\n                        <IoIosStar /> {content.vote_average || 0}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Now Playing</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {moviesNowPlaying.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/movie/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.title}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      {content.release_date ? (\r\n                        <span>\r\n                          <HiClock /> {content.release_date.slice(0, 4)}\r\n                        </span>\r\n                      ) : null}\r\n                      {content.vote_average ? (\r\n                        <span>\r\n                          <IoIosStar /> {content.vote_average || 0}\r\n                        </span>\r\n                      ) : null}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Top Rated</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {moviesTopRated.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/movie/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.title}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      <span>\r\n                        <HiClock /> {content.release_date.slice(0, 4)}\r\n                      </span>\r\n                      <span>\r\n                        <IoIosStar /> {content.vote_average || 0}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  if (type === 'tv') {\r\n    content = (\r\n      <>\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Airing Today</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {tvAiringToday.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/tv/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.name}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      {content.first_air_date ? (\r\n                        <span>\r\n                          <HiClock /> {content.first_air_date.slice(0, 4)}\r\n                        </span>\r\n                      ) : null}\r\n                      {content.vote_average ? (\r\n                        <span>\r\n                          <IoIosStar /> {content.vote_average || 0}\r\n                        </span>\r\n                      ) : null}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Popular</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {tvPopular.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/tv/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.name}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      <span>\r\n                        <HiClock />\r\n                        {content.first_air_date &&\r\n                          content.first_air_date.slice(0, 4)}\r\n                      </span>\r\n                      <span>\r\n                        <IoIosStar /> {content.vote_average || 0}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>On The Air</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {tvOnTheAir.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/tv/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.name}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      {content.first_air_date ? (\r\n                        <span>\r\n                          <HiClock /> {content.first_air_date.slice(0, 4)}\r\n                        </span>\r\n                      ) : null}\r\n                      {content.vote_average ? (\r\n                        <span>\r\n                          <IoIosStar /> {content.vote_average || 0}\r\n                        </span>\r\n                      ) : null}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='main_container'>\r\n          <div className='container-header'>\r\n            <h2 className='container-header--title'>Top Rated</h2>\r\n          </div>\r\n          <div className='container-content'>\r\n            <Slider {...settings}>\r\n              {tvTopRated.map((content) => (\r\n                <div className='item' key={content.id}>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/details/tv/${content.id}`,\r\n                      state: { id: content.id },\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        'https://image.tmdb.org/t/p/w300' + content.poster_path\r\n                      }\r\n                      alt={content.name}\r\n                    />\r\n                  </Link>\r\n                  <div className='item-footer'>\r\n                    <p>\r\n                      <span>\r\n                        <HiClock /> {content.first_air_date.slice(0, 4)}\r\n                      </span>\r\n                      <span>\r\n                        <IoIosStar /> {content.vote_average || 0}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='content container'>{loading === true ? content : null}</div>\r\n  );\r\n};\r\n\r\nexport default MovieTvContainer;\r\n","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport MoviesController from '../MoviesController/MoviesController';\r\nimport MovieTvContainer from '../MovieTvContainer/MovieTvContainer';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MoviesController />\r\n      <MovieTvContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default settings;"],"names":["MOVIE_BACKDROP","useContext","MovieContext","moviesUpcoming","tvAiringToday","type","loading","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint","movieGenres","movieTitle","moviePicture","movieYear","movieRating","movieId","tvGenres","tvTitle","tvPicture","tvYear","tvRating","tvId","background","moviesGenreList","genres","id","name","tvGenreList","slice","forEach","item","genre_ids","filter","x","map","push","title","release_date","backdrop_path","poster_path","vote_average","first_air_date","handleBackground","className","to","pathname","state","src","alt","Loader","handleMovies","handleTV","useState","setData","useEffect","localStorage","setItem","onClick","content","moviesPopular","moviesNowPlaying","moviesTopRated","tvPopular","tvOnTheAir","tvTopRated"],"sourceRoot":""}