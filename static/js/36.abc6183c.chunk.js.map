{"version":3,"file":"static/js/36.abc6183c.chunk.js","mappings":"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","sources":["components/DetailsPerson/DetailsPerson.jsx","components/shared/settings/settings.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport './DetailsPerson.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport defaultmovie from '../../pictures/defaultmovie.png';\r\n\r\nimport { IoIosStar } from 'react-icons/io';\r\nimport { HiClock } from 'react-icons/hi';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport settings from '../shared/settings/settings';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst DetailsPerson = () => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    birthday: '',\r\n    known_for: '',\r\n    biography: '',\r\n    place_of_birth: '',\r\n    picture: '',\r\n\r\n    //movie credits\r\n    movie_credits: [],\r\n\r\n    //tv credits\r\n    tv_credits: [],\r\n\r\n    //loading\r\n    loading: false,\r\n  });\r\n\r\n  const fetchPersonDetails = useCallback(async () => {\r\n    const urlPersonDetails = `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const urlMovieCredits = `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const urlTvCredits = `https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const request = [\r\n      fetch(urlPersonDetails),\r\n      fetch(urlMovieCredits),\r\n      fetch(urlTvCredits),\r\n    ];\r\n    const response = await Promise.all(request);\r\n    const data = await Promise.all(response.map((res) => res.json()));\r\n    //console.log(data);\r\n    setData({\r\n      name: data[0].name,\r\n      biography: data[0].biography,\r\n      birthday: data[0].birthday,\r\n      known_for: data[0].known_for_department,\r\n      place_of_birth: data[0].place_of_birth,\r\n      picture: data[0].profile_path,\r\n      movie_credits: data[1].cast,\r\n      tv_credits: data[2].cast,\r\n      loading: true,\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchPersonDetails();\r\n  }, [fetchPersonDetails]);\r\n\r\n  const {\r\n    name,\r\n    biography,\r\n    birthday,\r\n    known_for,\r\n    place_of_birth,\r\n    picture,\r\n    movie_credits,\r\n    tv_credits,\r\n  } = data;\r\n\r\n  let content;\r\n\r\n  content = (\r\n    <div id='person-details'>\r\n      <div className='person-details-header'>\r\n        <div className='person-details-header-image'>\r\n          <img src={theatre} alt='theatre' />\r\n        </div>\r\n\r\n        <div className='person-details-header-content'>\r\n          <div className='person-details-header-content-picture'>\r\n            <img\r\n              src={picture ? 'https://image.tmdb.org/t/p/w200' + picture : pic}\r\n              alt={name}\r\n            />\r\n          </div>\r\n          <div className='person-details-header-content-details'>\r\n            <span className='person-details-header-content-details-title'>\r\n              {name}\r\n            </span>\r\n            <span className='person-details-header-content-details-known_for'>\r\n              {known_for ? `Known for: ${known_for}` : null}\r\n            </span>\r\n            <span className='person-details-header-content-details-birthday'>\r\n              {birthday\r\n                ? `Date of birth: ${birthday.split('-').reverse().join('/')}`\r\n                : null}\r\n            </span>\r\n            <span className='person-details-header-content-details-place_of_birth'>\r\n              {place_of_birth ? `Place of birth: ${place_of_birth}` : null}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='person-details-content container'>\r\n        {biography.length > 0 ? (\r\n          <div className='person-details-content-biography'>\r\n            <h2 className='person-details-content-biography-title'>\r\n              BIOGRAPHY\r\n            </h2>\r\n            <p className='person-details-content-biography-content'>\r\n              {biography}\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n\r\n        {movie_credits.length > 0 ? (\r\n          <div className='person-details-content-cast-movies'>\r\n            <div className='person-details-content-cast-movies-header'>\r\n              <h2 className='person-details-content-cast-movies-title'>\r\n                MOVIE CREDITS\r\n              </h2>\r\n            </div>\r\n            <div className='person-details-content-cast-movies-content'>\r\n              <Slider {...settings}>\r\n                {movie_credits.map((content) => (\r\n                  <div\r\n                    className='person-details-content-cast-movies-cast-item'\r\n                    key={content.id}\r\n                  >\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${content.id}`,\r\n                        state: { id: content.id },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          content.backdrop_path || content.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w200${\r\n                                content.poster_path || content.backdrop_path\r\n                              }`\r\n                            : defaultmovie\r\n                        }\r\n                        alt={content.original_title}\r\n                      />\r\n                    </Link>\r\n                    <div className='person-details-content-cast-movies-cast-item-footer'>\r\n                      <p>\r\n                        <span className='HiClock'>\r\n                          <HiClock />\r\n                          {(content.release_date &&\r\n                            content.release_date.slice(0, 4)) ||\r\n                            'N/A'}\r\n                        </span>\r\n                        <span className='IoIosStar'>\r\n                          <IoIosStar /> {content.vote_average}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {tv_credits.length > 0 ? (\r\n          <div className='person-details-content-cast-tv'>\r\n            <div className='person-details-content-cast-tv-header'>\r\n              <h2 className='person-details-content-cast-tv-title'>\r\n                TV CREDITS\r\n              </h2>\r\n            </div>\r\n            <div className='person-details-content-cast-tv-content'>\r\n              <Slider {...settings}>\r\n                {tv_credits.map((content) => (\r\n                  <div\r\n                    className='person-details-content-cast-tv-cast-item'\r\n                    key={content.id}\r\n                  >\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/tv/${content.id}`,\r\n                        state: { id: content.id },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          content.backdrop_path || content.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w200${\r\n                                content.poster_path || content.backdrop_path\r\n                              }`\r\n                            : defaultmovie\r\n                        }\r\n                        alt={content.original_title}\r\n                      />\r\n                    </Link>\r\n                    <div className='person-details-content-cast-tv-cast-item-footer'>\r\n                      <p>\r\n                        <span className='HiClock'>\r\n                          <HiClock />\r\n                          {content.first_air_date &&\r\n                            content.first_air_date.slice(0, 4)}\r\n                        </span>\r\n                        <span className='IoIosStar'>\r\n                          <IoIosStar /> {content.vote_average || 0}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className='person-details-content-reviews'>\r\n          <div className='person-details-content-reviews-header'>\r\n            <h2 className='person-details-content-reviews-title'>COMMENTS</h2>\r\n          </div>\r\n          <div className='person-details-content-reviews-content'>\r\n            <div className='person-details-content-review-item'>\r\n              <p className='person-details-content-review-item-content'>\r\n                There are no comments for this person.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nexport default DetailsPerson;\r\n","const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default settings;"],"names":["id","useParams","useState","name","birthday","known_for","biography","place_of_birth","picture","movie_credits","tv_credits","loading","data","setData","fetchPersonDetails","useCallback","urlPersonDetails","process","urlMovieCredits","urlTvCredits","request","fetch","Promise","all","response","map","res","json","known_for_department","profile_path","cast","useEffect","content","className","src","theatre","alt","pic","split","reverse","join","length","settings","to","pathname","state","backdrop_path","poster_path","defaultmovie","original_title","release_date","slice","vote_average","first_air_date","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint"],"sourceRoot":""}