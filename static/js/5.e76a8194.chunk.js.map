{"version":3,"sources":["components/Header/Header.js","components/MoviesController/MoviesController.js","components/MovieTvContainer/MovieTvContainer.js","components/Homepage/Homepage.js"],"names":["MOVIE_BACKDROP","Header","useContext","MovieContext","moviesUpcoming","tvAiringToday","type","loading","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint","movieGenres","movieTitle","moviePicture","movieYear","movieRating","movieId","tvGenres","tvTitle","tvPicture","tvYear","tvRating","tvId","background","moviesGenreList","tvGenreList","slice","genres","forEach","item","genre_ids","filter","x","id","map","push","name","title","release_date","backdrop_path","poster_path","vote_average","first_air_date","handleBackground","className","to","pathname","state","src","alt","Loader","MoviesController","handleMovies","handleTV","useState","setData","useEffect","localStorage","setItem","onClick","MovieTvContainer","content","moviesPopular","moviesNowPlaying","moviesTopRated","tvPopular","tvOnTheAir","tvTopRated","key","Homepage"],"mappings":"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","file":"static/js/5.e76a8194.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport './Header.css';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst MOVIE_BACKDROP = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst Header = () => {\r\n    const { moviesUpcoming, tvAiringToday, type, loading } = useContext(MovieContext);\r\n\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        speed: 3000,\r\n        autoplaySpeed: 8000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    let movieGenres = [];\r\n    let movieTitle = [];\r\n    let moviePicture = [];\r\n    let movieYear = [];\r\n    let movieRating = [];\r\n    let movieId = [];\r\n\r\n    let tvGenres = [];\r\n    let tvTitle = [];\r\n    let tvPicture = [];\r\n    let tvYear = [];\r\n    let tvRating = [];\r\n    let tvId = [];\r\n\r\n    const handleBackground = () => {\r\n        let moviesGenreList = {\r\n            \"genres\": [\r\n                {\r\n                    \"id\": 28,\r\n                    \"name\": \"Action\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"name\": \"Adventure\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\": \"Animation\"\r\n                },\r\n                {\r\n                    \"id\": 35,\r\n                    \"name\": \"Comedy\"\r\n                },\r\n                {\r\n                    \"id\": 80,\r\n                    \"name\": \"Crime\"\r\n                },\r\n                {\r\n                    \"id\": 99,\r\n                    \"name\": \"Documentary\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\": \"Drama\"\r\n                },\r\n                {\r\n                    \"id\": 10751,\r\n                    \"name\": \"Family\"\r\n                },\r\n                {\r\n                    \"id\": 14,\r\n                    \"name\": \"Fantasy\"\r\n                },\r\n                {\r\n                    \"id\": 36,\r\n                    \"name\": \"History\"\r\n                },\r\n                {\r\n                    \"id\": 27,\r\n                    \"name\": \"Horror\"\r\n                },\r\n                {\r\n                    \"id\": 10402,\r\n                    \"name\": \"Music\"\r\n                },\r\n                {\r\n                    \"id\": 9648,\r\n                    \"name\": \"Mystery\"\r\n                },\r\n                {\r\n                    \"id\": 10749,\r\n                    \"name\": \"Romance\"\r\n                },\r\n                {\r\n                    \"id\": 878,\r\n                    \"name\": \"Science Fiction\"\r\n                },\r\n                {\r\n                    \"id\": 10770,\r\n                    \"name\": \"TV Movie\"\r\n                },\r\n                {\r\n                    \"id\": 53,\r\n                    \"name\": \"Thriller\"\r\n                },\r\n                {\r\n                    \"id\": 10752,\r\n                    \"name\": \"War\"\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"name\": \"Western\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        let tvGenreList = {\r\n            \"genres\": [\r\n                {\r\n                    \"id\": 10759,\r\n                    \"name\": \"Action & Adventure\"\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"name\": \"Animation\"\r\n                },\r\n                {\r\n                    \"id\": 35,\r\n                    \"name\": \"Comedy\"\r\n                },\r\n                {\r\n                    \"id\": 80,\r\n                    \"name\": \"Crime\"\r\n                },\r\n                {\r\n                    \"id\": 99,\r\n                    \"name\": \"Documentary\"\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"name\": \"Drama\"\r\n                },\r\n                {\r\n                    \"id\": 10751,\r\n                    \"name\": \"Family\"\r\n                },\r\n                {\r\n                    \"id\": 10762,\r\n                    \"name\": \"Kids\"\r\n                },\r\n                {\r\n                    \"id\": 9648,\r\n                    \"name\": \"Mystery\"\r\n                },\r\n                {\r\n                    \"id\": 10763,\r\n                    \"name\": \"News\"\r\n                },\r\n                {\r\n                    \"id\": 10764,\r\n                    \"name\": \"Reality\"\r\n                },\r\n                {\r\n                    \"id\": 10765,\r\n                    \"name\": \"Sci-Fi & Fantasy\"\r\n                },\r\n                {\r\n                    \"id\": 10766,\r\n                    \"name\": \"Soap\"\r\n                },\r\n                {\r\n                    \"id\": 10767,\r\n                    \"name\": \"Talk\"\r\n                },\r\n                {\r\n                    \"id\": 10768,\r\n                    \"name\": \"War & Politics\"\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"name\": \"Western\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        //console.log(moviesGenreList.genres, tvGenreList.genres);\r\n        let background;\r\n        if (type === 'movie') {\r\n            background = moviesUpcoming.slice(0, 3) || [];\r\n            if (background && moviesGenreList.genres) {\r\n                background.forEach((item) => {\r\n                    item.genre_ids = moviesGenreList.genres.filter(x => x.id === item.genre_ids[0])\r\n                        .map(x => movieGenres.push(x.name))\r\n                    movieTitle.push(item.title);\r\n                    movieYear.push(item.release_date.slice(0, 4));\r\n                    moviePicture.push(item.backdrop_path || item.poster_path);\r\n                    movieRating.push(item.vote_average);\r\n                    movieId.push(item.id);\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        if (type === 'tv') {\r\n            background = tvAiringToday.slice(0, 3) || [];\r\n\r\n            if (background && tvGenreList.genres) {\r\n                background.forEach((item) => {\r\n                    item.genre_ids = tvGenreList.genres.filter(x => x.id === item.genre_ids[0])\r\n                        .map(x => tvGenres.push(x.name))\r\n                    tvTitle.push(item.name);\r\n                    tvYear.push(item.first_air_date.slice(0, 4));\r\n                    tvPicture.push(item.backdrop_path || item.poster_path);\r\n                    tvRating.push(item.vote_average);\r\n                    tvId.push(item.id);\r\n                });\r\n            }\r\n        }\r\n        return background;\r\n    }\r\n\r\n    handleBackground();\r\n\r\n\r\n    return (<>{loading === true ?\r\n\r\n        <div className=\"header\">\r\n\r\n            {type === 'movie' ? < div className='main_container_header'>\r\n\r\n                <div className=\"container-content\">\r\n                    <Slider {...settings}>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/movie/${movieId[0]}`,\r\n                                state: { id: movieId[0] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + moviePicture[0]} alt={movieTitle[0]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Upcoming</span>\r\n                                    <span className=\"header-title-name\">{movieTitle[0]}</span>\r\n                                    <span className=\"header-year-rating\">{movieGenres[0]} | {movieYear[0]} | {movieRating[0]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/movie/${movieId[1]}`,\r\n                                state: { id: movieId[1] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + moviePicture[1]} alt={movieTitle[1]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Upcoming</span>\r\n                                    <span className=\"header-title-name\">{movieTitle[1]}</span>\r\n                                    <span className=\"header-year-rating\">{movieGenres[1]} | {movieYear[1]} | {movieRating[1]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/movie/${movieId[2]}`,\r\n                                state: { id: movieId[2] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + moviePicture[2]} alt={movieTitle[2]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Upcoming</span>\r\n                                    <span className=\"header-title-name\">{movieTitle[2]}</span>\r\n                                    <span className=\"header-year-rating\">{movieGenres[2]} | {movieYear[2]} | {movieRating[2]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </Slider>\r\n                </div>\r\n            </div> : null}\r\n\r\n            {type === 'tv' ? <div className='main_container_header'>\r\n\r\n                <div className=\"container-content\">\r\n                    <Slider {...settings}>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/tv/${tvId[0]}`,\r\n                                state: { id: tvId[0] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + tvPicture[0]} alt={tvTitle[0]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Airing Today</span>\r\n                                    <span className=\"header-title-name\">{tvTitle[0]}</span>\r\n                                    <span className=\"header-year-rating\">{tvGenres[0]} | {tvYear[0]} | {tvRating[0]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/tv/${tvId[1]}`,\r\n                                state: { id: tvId[1] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + tvPicture[1]} alt={tvTitle[1]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Airing Today</span>\r\n                                    <span className=\"header-title-name\">{tvTitle[1]}</span>\r\n                                    <span className=\"header-year-rating\">{tvGenres[1]} | {tvYear[1]} | {tvRating[1]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"header-item\">\r\n                            <Link to={{\r\n                                pathname: `/details/tv/${tvId[2]}`,\r\n                                state: { id: tvId[2] }\r\n                            }}>\r\n                                <img src={MOVIE_BACKDROP + tvPicture[2]} alt={tvTitle[2]} />\r\n                                <div className=\"item-text\">\r\n                                    <span className='header-title'>Airing Today</span>\r\n                                    <span className=\"header-title-name\">{tvTitle[2]}</span>\r\n                                    <span className=\"header-year-rating\">{tvGenres[2]} | {tvYear[2]} | {tvRating[2]} Rating</span>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </Slider>\r\n                </div>\r\n            </div> : null}\r\n\r\n        </div>\r\n        : <Loader />}</>)\r\n}\r\n\r\nexport default Header;","import React, { useContext, useState, useEffect } from 'react';\r\nimport './MoviesController.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\n\r\n\r\nconst MoviesController = () => {\r\n    const { type, handleMovies, handleTV, loading } = useContext(MovieContext);\r\n    const [data, setData] = useState(MovieContext);\r\n\r\n    useEffect(() => {\r\n        if (!type) {\r\n            localStorage.setItem('type', type) || handleMovies();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (type === 'movie') {\r\n            handleMovies();\r\n        } else if (type === 'tv') {\r\n            handleTV();\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>{loading === true ?\r\n            <div className=\"MoviesOrTv container\">\r\n                <button className={` btn btn-outline-primary ${type === 'movie' ? 'btn-selected' : null}`}\r\n                    onClick={() => { handleMovies(); setData({ type: 'movie' }) }}\r\n                >\r\n                    MOVIES\r\n</button>\r\n                <button className={` btn btn-outline-primary ${type === 'tv' ? 'btn-selected' : null}`}\r\n                    onClick={() => { handleTV(); setData({ type: 'tv' }) }}\r\n                >\r\n                    TV SHOWS\r\n</button>\r\n            </div>\r\n            : null}</>\r\n    )\r\n}\r\n\r\nexport default MoviesController;","import React, { useContext } from 'react';\r\nimport './MovieTvContainer.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nimport { IoIosStar } from \"react-icons/io\";\r\nimport { HiClock } from \"react-icons/hi\";\r\n\r\n\r\nconst MovieTvContainer = () => {\r\n    const { moviesUpcoming, moviesPopular, moviesNowPlaying, moviesTopRated,\r\n        tvAiringToday, tvPopular, tvOnTheAir, tvTopRated, type, loading } = useContext(MovieContext);\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n\r\n    let content;\r\n    if (type === 'movie') {\r\n        content = (\r\n            <>\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Upcoming</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {moviesUpcoming.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/movie/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.release_date ? <span><HiClock /> {(content.release_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Popular</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {moviesPopular.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/movie/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.release_date ? <span><HiClock /> {(content.release_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Now Playing</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {moviesNowPlaying.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/movie/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.release_date ? <span><HiClock /> {(content.release_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Top Rated</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {moviesTopRated.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/movie/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            <span><HiClock /> {(content.release_date).slice(0, 4)}</span>\r\n                                            <span><IoIosStar /> {((content.vote_average || 0))}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    if (type === 'tv') {\r\n        content = (\r\n            <>\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Airing Today</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {tvAiringToday.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/tv/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.first_air_date ? <span><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Popular</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {tvPopular.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/tv/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.first_air_date ? <span><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>On The Air</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {tvOnTheAir.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/tv/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            {content.first_air_date ? <span><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='main_container'>\r\n                    <div className='container-header'>\r\n                        <h2 className='container-header--title'>Top Rated</h2>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n                        <Slider {...settings}>\r\n                            {tvTopRated.map(content =>\r\n                                <div className=\"item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/tv/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                    </Link>\r\n                                    <div className=\"item-footer\">\r\n                                        <p>\r\n                                            <span><HiClock /> {(content.first_air_date).slice(0, 4)}</span>\r\n                                            <span><IoIosStar /> {((content.vote_average || 0))}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (<div className=\"content container\">{loading === true ? content : null}</div>)\r\n}\r\n\r\nexport default MovieTvContainer;","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport MoviesController from '../MoviesController/MoviesController';\r\nimport MovieTvContainer from '../MovieTvContainer/MovieTvContainer';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <MoviesController />\r\n            <MovieTvContainer />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n"],"sourceRoot":""}