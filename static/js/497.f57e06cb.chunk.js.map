{"version":3,"file":"static/js/497.f57e06cb.chunk.js","mappings":"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","sources":["components/DetailsMovie/DetailsMovie.jsx","components/shared/settings/settings.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport '../DetailsTv/DetailsTv.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport settings from '../shared/settings/settings';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst DetailsMovie = () => {\r\n  const { id } = useParams();\r\n\r\n  const [detailsMovie, setDetailsMovie] = useState({\r\n    //movies\r\n    backdrop_path_movie: '',\r\n    poster_path_movie: '',\r\n    genres_movie: '',\r\n    title_movie: '',\r\n    vote_average_movie: '',\r\n    vote_count_movie: '',\r\n    release_date_movie: '',\r\n    runtime_movie: '',\r\n    original_language_movie: '',\r\n    tagline: '',\r\n    overview_movie: '',\r\n\r\n    //cast\r\n    cast: [],\r\n\r\n    //trailers\r\n    trailers: [],\r\n\r\n    //reviews\r\n    reviews: [],\r\n\r\n    //loading\r\n    loading: false,\r\n  });\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    const urlMovieReviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n    const urlMovieVideo = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const urlMovieCast = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}`;\r\n    const urlMovie = `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const request = [\r\n      fetch(urlMovie),\r\n      fetch(urlMovieCast),\r\n      fetch(urlMovieVideo),\r\n      fetch(urlMovieReviews),\r\n    ];\r\n    const response = await Promise.all(request);\r\n    const data = await Promise.all(response.map((res) => res.json()));\r\n    setDetailsMovie({\r\n      backdrop_path_movie: data[0].backdrop_path,\r\n      genres_movie: data[0].genres,\r\n      title_movie: data[0].title,\r\n      tagline: data[0].tagline,\r\n      vote_average_movie: data[0].vote_average,\r\n      vote_count_movie: data[0].vote_count,\r\n      release_date_movie: data[0].release_date,\r\n      runtime_movie: data[0].runtime,\r\n      original_language_movie: data[0].original_language,\r\n      overview_movie: data[0].overview,\r\n      poster_path_movie: data[0].poster_path,\r\n      cast: data[1].cast,\r\n      trailers: data[2].results,\r\n      reviews: data[3].results,\r\n      loading: true,\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, [fetchDetails]);\r\n\r\n  const {\r\n    backdrop_path_movie,\r\n    genres_movie,\r\n    title_movie,\r\n    vote_average_movie,\r\n    vote_count_movie,\r\n    release_date_movie,\r\n    runtime_movie,\r\n    original_language_movie,\r\n    tagline,\r\n    overview_movie,\r\n    poster_path_movie,\r\n    cast,\r\n    trailers,\r\n    reviews,\r\n  } = detailsMovie;\r\n\r\n  let genMovie = [];\r\n  if (genres_movie) {\r\n    for (let genre of genres_movie) {\r\n      genMovie.push(genre['name']);\r\n    }\r\n  }\r\n  let finishMovie = genMovie.slice(0, 2).join(' | ');\r\n\r\n  let backgroundMovie = backdrop_path_movie || poster_path_movie;\r\n\r\n  const slicedTrailers = trailers.slice(0, 3);\r\n\r\n  //console.log(trailers);\r\n\r\n  const settingsvideo = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  let content;\r\n\r\n  if (tagline === '' || tagline) {\r\n    content = (\r\n      <div id='details'>\r\n        <div className='details-header'>\r\n          <div className='details-header-image'>\r\n            <img\r\n              src={\r\n                backgroundMovie === null\r\n                  ? theatre\r\n                  : 'https://image.tmdb.org/t/p/w1280' + backgroundMovie\r\n              }\r\n              alt={title_movie}\r\n            />\r\n          </div>\r\n          <div className='details-header-details'>\r\n            <span className='details-header-details-title'>{title_movie}</span>\r\n            <span className='details-header-details-genres'>{finishMovie}</span>\r\n            <span className='details-header-details-runtime-rating'>\r\n              {release_date_movie ? (\r\n                <>{release_date_movie.split('-').reverse().join('/')} | </>\r\n              ) : null}\r\n              {runtime_movie ? <>{`${runtime_movie} mins | `}</> : null}\r\n              {original_language_movie ? (\r\n                <>{original_language_movie.toUpperCase()} | </>\r\n              ) : null}\r\n              {vote_average_movie ? vote_average_movie : null}{' '}\r\n              {vote_count_movie ? <>{`(${vote_count_movie})`}</> : null}\r\n            </span>\r\n            <span className='details-header-details-tagline'>\r\n              {tagline || ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='details-content container'>\r\n          {overview_movie.length > 0 ? (\r\n            <div className='details-content-overview'>\r\n              <h2 className='details-content-overview-title'>OVERVIEW</h2>\r\n              <p className='details-content-overview-content'>\r\n                {overview_movie}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          {cast.length > 0 ? (\r\n            <div className='details-content-cast'>\r\n              <div className='details-content-cast-header'>\r\n                <h2 className='details-content-cast-title'>CAST</h2>\r\n              </div>\r\n              <div className='details-content-cast-content'>\r\n                <Slider {...settings}>\r\n                  {cast.map((content) => (\r\n                    <div className='details-content-cast-item' key={content.id}>\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/person/${content.id}`,\r\n                          state: { id: content.id },\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            content.profile_path === null\r\n                              ? pic\r\n                              : 'https://image.tmdb.org/t/p/w300' +\r\n                                content.profile_path\r\n                          }\r\n                          alt={content.name}\r\n                        />\r\n                      </Link>\r\n                      <div className='details-content-cast-item-footer'>\r\n                        <p>{content.name}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='details-content-trailers'>\r\n            <div className='details-content-trailers-header'>\r\n              <h2 className='details-content-trailers-title'>TRAILERS</h2>\r\n            </div>\r\n            <div className='details-content-trailers-content'>\r\n              {trailers.length > 0 ? (\r\n                <Slider {...settingsvideo}>\r\n                  {slicedTrailers.map((content) => (\r\n                    <div\r\n                      className='details-content-trailers-item'\r\n                      key={content.key}\r\n                    >\r\n                      <iframe\r\n                        src={'https://www.youtube.com/embed/' + content.key}\r\n                        title={content.key}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </Slider>\r\n              ) : (\r\n                <div className='details-content-review-item'>\r\n                  <p className='details-content-review-item-content'>\r\n                    There are no trailers for this movie.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='details-content-reviews'>\r\n            <div className='details-content-reviews-header'>\r\n              <h2 className='details-content-reviews-title'>REVIEWS</h2>\r\n            </div>\r\n            <div className='details-content-reviews-content'>\r\n              {reviews.length > 0 ? (\r\n                reviews.map((review) => (\r\n                  <div\r\n                    className='details-content-review-item'\r\n                    key={review.author}\r\n                  >\r\n                    <h4 className='details-content-review-item-title'>\r\n                      {review.author}\r\n                    </h4>\r\n                    <p className='details-content-review-item-content'>\r\n                      {review.content.length > 300\r\n                        ? review.content.slice(0, 300)\r\n                        : review.content}\r\n                      ...\r\n                    </p>\r\n                    <a href={review.url}>View full review</a>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className='details-content-review-item'>\r\n                  <p className='details-content-review-item-content'>\r\n                    There are no reviews for this movie.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nexport default DetailsMovie;\r\n","const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default settings;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["id","useParams","useState","backdrop_path_movie","poster_path_movie","genres_movie","title_movie","vote_average_movie","vote_count_movie","release_date_movie","runtime_movie","original_language_movie","tagline","overview_movie","cast","trailers","reviews","loading","detailsMovie","setDetailsMovie","fetchDetails","useCallback","urlMovieReviews","process","urlMovieVideo","urlMovieCast","urlMovie","request","fetch","Promise","all","response","map","res","json","data","backdrop_path","genres","title","vote_average","vote_count","release_date","runtime","original_language","overview","poster_path","results","useEffect","genMovie","genre","push","content","finishMovie","slice","join","backgroundMovie","slicedTrailers","settingsvideo","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint","settings","length","className","src","theatre","alt","split","reverse","toUpperCase","to","pathname","state","profile_path","pic","name","key","review","author","href","url","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}