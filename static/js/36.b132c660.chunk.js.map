{"version":3,"file":"static/js/36.b132c660.chunk.js","mappings":"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","sources":["components/DetailsPerson/DetailsPerson.jsx","components/shared/settings/settings.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport './DetailsPerson.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport defaultmovie from '../../pictures/defaultmovie.png';\r\n\r\nimport { IoIosStar } from 'react-icons/io';\r\nimport { HiClock } from 'react-icons/hi';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport settings from '../shared/settings/settings';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst DetailsPerson = () => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    birthday: '',\r\n    known_for: '',\r\n    biography: '',\r\n    place_of_birth: '',\r\n    picture: '',\r\n\r\n    //movie credits\r\n    movie_credits: [],\r\n\r\n    //tv credits\r\n    tv_credits: [],\r\n\r\n    //loading\r\n    loading: false,\r\n  });\r\n\r\n  const fetchPersonDetails = useCallback(async () => {\r\n    const urlPersonDetails = `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const urlMovieCredits = `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const urlTvCredits = `https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n    const request = [\r\n      fetch(urlPersonDetails),\r\n      fetch(urlMovieCredits),\r\n      fetch(urlTvCredits),\r\n    ];\r\n    const response = await Promise.all(request);\r\n    const data = await Promise.all(response.map((res) => res.json()));\r\n    //console.log(data);\r\n    setData({\r\n      name: data[0].name,\r\n      biography: data[0].biography,\r\n      birthday: data[0].birthday,\r\n      known_for: data[0].known_for_department,\r\n      place_of_birth: data[0].place_of_birth,\r\n      picture: data[0].profile_path,\r\n      movie_credits: data[1].cast,\r\n      tv_credits: data[2].cast,\r\n      loading: true,\r\n    });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetchPersonDetails();\r\n  }, [fetchPersonDetails]);\r\n\r\n  const {\r\n    name,\r\n    biography,\r\n    birthday,\r\n    known_for,\r\n    place_of_birth,\r\n    picture,\r\n    movie_credits,\r\n    tv_credits,\r\n  } = data;\r\n\r\n  let content;\r\n\r\n  content = (\r\n    <div id='person-details'>\r\n      <div className='person-details-header'>\r\n        <div className='person-details-header-image'>\r\n          <img src={theatre} alt='theatre' />\r\n        </div>\r\n\r\n        <div className='person-details-header-content'>\r\n          <div className='person-details-header-content-picture'>\r\n            <img\r\n              src={picture ? 'https://image.tmdb.org/t/p/w200' + picture : pic}\r\n              alt={name}\r\n            />\r\n          </div>\r\n          <div className='person-details-header-content-details'>\r\n            <span className='person-details-header-content-details-title'>\r\n              {name}\r\n            </span>\r\n            <span className='person-details-header-content-details-known_for'>\r\n              {known_for ? `Known for: ${known_for}` : null}\r\n            </span>\r\n            <span className='person-details-header-content-details-birthday'>\r\n              {birthday\r\n                ? `Date of birth: ${birthday.split('-').reverse().join('/')}`\r\n                : null}\r\n            </span>\r\n            <span className='person-details-header-content-details-place_of_birth'>\r\n              {place_of_birth ? `Place of birth: ${place_of_birth}` : null}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='person-details-content container'>\r\n        {biography.length > 0 ? (\r\n          <div className='person-details-content-biography'>\r\n            <h2 className='person-details-content-biography-title'>\r\n              BIOGRAPHY\r\n            </h2>\r\n            <p className='person-details-content-biography-content'>\r\n              {biography}\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n\r\n        {movie_credits.length > 0 ? (\r\n          <div className='person-details-content-cast-movies'>\r\n            <div className='person-details-content-cast-movies-header'>\r\n              <h2 className='person-details-content-cast-movies-title'>\r\n                MOVIE CREDITS\r\n              </h2>\r\n            </div>\r\n            <div className='person-details-content-cast-movies-content'>\r\n              <Slider {...settings}>\r\n                {movie_credits.map((content) => (\r\n                  <div\r\n                    className='person-details-content-cast-movies-cast-item'\r\n                    key={content.id}\r\n                  >\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${content.id}`,\r\n                        state: { id: content.id },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          content.backdrop_path || content.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w200${\r\n                                content.poster_path || content.backdrop_path\r\n                              }`\r\n                            : defaultmovie\r\n                        }\r\n                        alt={content.original_title}\r\n                      />\r\n                    </Link>\r\n                    <div className='person-details-content-cast-movies-cast-item-footer'>\r\n                      <p>\r\n                        <span className='HiClock'>\r\n                          <HiClock />\r\n                          {(content.release_date &&\r\n                            content.release_date.slice(0, 4)) ||\r\n                            'N/A'}\r\n                        </span>\r\n                        <span className='IoIosStar'>\r\n                          <IoIosStar /> {content.vote_average.toFixed(1) || 0}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {tv_credits.length > 0 ? (\r\n          <div className='person-details-content-cast-tv'>\r\n            <div className='person-details-content-cast-tv-header'>\r\n              <h2 className='person-details-content-cast-tv-title'>\r\n                TV CREDITS\r\n              </h2>\r\n            </div>\r\n            <div className='person-details-content-cast-tv-content'>\r\n              <Slider {...settings}>\r\n                {tv_credits.map((content) => (\r\n                  <div\r\n                    className='person-details-content-cast-tv-cast-item'\r\n                    key={content.id}\r\n                  >\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/tv/${content.id}`,\r\n                        state: { id: content.id },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          content.backdrop_path || content.poster_path\r\n                            ? `https://image.tmdb.org/t/p/w200${\r\n                                content.poster_path || content.backdrop_path\r\n                              }`\r\n                            : defaultmovie\r\n                        }\r\n                        alt={content.original_title}\r\n                      />\r\n                    </Link>\r\n                    <div className='person-details-content-cast-tv-cast-item-footer'>\r\n                      <p>\r\n                        <span className='HiClock'>\r\n                          <HiClock />\r\n                          {content.first_air_date &&\r\n                            content.first_air_date.slice(0, 4)}\r\n                        </span>\r\n                        <span className='IoIosStar'>\r\n                          <IoIosStar />\r\n                          {content.vote_average.toFixed(1) || 0}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className='person-details-content-reviews'>\r\n          <div className='person-details-content-reviews-header'>\r\n            <h2 className='person-details-content-reviews-title'>COMMENTS</h2>\r\n          </div>\r\n          <div className='person-details-content-reviews-content'>\r\n            <div className='person-details-content-review-item'>\r\n              <p className='person-details-content-review-item-content'>\r\n                There are no comments for this person.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nexport default DetailsPerson;\r\n","const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default settings;"],"names":["DetailsPerson","id","useParams","data","setData","useState","name","birthday","known_for","biography","place_of_birth","picture","movie_credits","tv_credits","loading","fetchPersonDetails","useCallback","async","urlMovieCredits","urlTvCredits","request","fetch","response","Promise","all","map","res","json","known_for_department","profile_path","cast","useEffect","content","_jsxs","children","className","_jsx","src","theatre","alt","pic","split","reverse","join","length","Slider","settings","Link","to","pathname","state","backdrop_path","poster_path","defaultmovie","original_title","HiClock","release_date","slice","IoIosStar","vote_average","toFixed","first_air_date","_Fragment","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint"],"sourceRoot":""}