{"version":3,"file":"static/js/535.e8a4a11e.chunk.js","mappings":"wNAUA,MAAMA,EAAiB,mCA6ZvB,EA3ZeC,KACb,MAAM,eAAEC,EAAc,cAAEC,EAAa,KAAEC,EAAI,QAAEC,IAC3CC,EAAAA,EAAAA,YAAWC,EAAAA,GAEPC,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,MAAO,IACPC,cAAe,IACfC,cAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,IAGpB,CACEM,WAAY,IACZV,SAAU,CACRG,aAAc,EACdC,eAAgB,MAMlBO,EAAc,GACdC,EAAa,GACbC,EAAe,GACfC,EAAY,GACZC,EAAc,GACdC,EAAU,GAEVC,EAAW,GACXC,EAAU,GACVC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAO,GAgMb,MA9LyBC,MACvB,MAAMC,EAAkB,CACtBC,OAAQ,CACN,CACEC,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,GACJC,KAAM,eAER,CACED,GAAI,GACJC,KAAM,SAER,CACED,GAAI,MACJC,KAAM,UAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,WAER,CACED,GAAI,GACJC,KAAM,UAER,CACED,GAAI,MACJC,KAAM,SAER,CACED,GAAI,KACJC,KAAM,WAER,CACED,GAAI,MACJC,KAAM,WAER,CACED,GAAI,IACJC,KAAM,mBAER,CACED,GAAI,MACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,YAER,CACED,GAAI,MACJC,KAAM,OAER,CACED,GAAI,GACJC,KAAM,aAKNC,EAAc,CAClBH,OAAQ,CACN,CACEC,GAAI,MACJC,KAAM,sBAER,CACED,GAAI,GACJC,KAAM,aAE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","sources":["components/Header/Header.jsx","components/Controller/Controller.jsx","components/shared/MainPageContainers/MainPageContainers.jsx","components/MainContainer/MainContainer.jsx","components/Homepage/Homepage.jsx","components/shared/settings/settings.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport './Header.css';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport MovieContext from '../../context/MovieContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst MOVIE_BACKDROP = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst Header = () => {\r\n  const { moviesUpcoming, tvAiringToday, type, loading } =\r\n    useContext(MovieContext);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    speed: 3000,\r\n    autoplaySpeed: 8000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const movieGenres = [];\r\n  const movieTitle = [];\r\n  const moviePicture = [];\r\n  const movieYear = [];\r\n  const movieRating = [];\r\n  const movieId = [];\r\n\r\n  const tvGenres = [];\r\n  const tvTitle = [];\r\n  const tvPicture = [];\r\n  const tvYear = [];\r\n  const tvRating = [];\r\n  const tvId = [];\r\n\r\n  const handleBackground = () => {\r\n    const moviesGenreList = {\r\n      genres: [\r\n        {\r\n          id: 28,\r\n          name: 'Action',\r\n        },\r\n        {\r\n          id: 12,\r\n          name: 'Adventure',\r\n        },\r\n        {\r\n          id: 16,\r\n          name: 'Animation',\r\n        },\r\n        {\r\n          id: 35,\r\n          name: 'Comedy',\r\n        },\r\n        {\r\n          id: 80,\r\n          name: 'Crime',\r\n        },\r\n        {\r\n          id: 99,\r\n          name: 'Documentary',\r\n        },\r\n        {\r\n          id: 18,\r\n          name: 'Drama',\r\n        },\r\n        {\r\n          id: 10751,\r\n          name: 'Family',\r\n        },\r\n        {\r\n          id: 14,\r\n          name: 'Fantasy',\r\n        },\r\n        {\r\n          id: 36,\r\n          name: 'History',\r\n        },\r\n        {\r\n          id: 27,\r\n          name: 'Horror',\r\n        },\r\n        {\r\n          id: 10402,\r\n          name: 'Music',\r\n        },\r\n        {\r\n          id: 9648,\r\n          name: 'Mystery',\r\n        },\r\n        {\r\n          id: 10749,\r\n          name: 'Romance',\r\n        },\r\n        {\r\n          id: 878,\r\n          name: 'Science Fiction',\r\n        },\r\n        {\r\n          id: 10770,\r\n          name: 'TV Movie',\r\n        },\r\n        {\r\n          id: 53,\r\n          name: 'Thriller',\r\n        },\r\n        {\r\n          id: 10752,\r\n          name: 'War',\r\n        },\r\n        {\r\n          id: 37,\r\n          name: 'Western',\r\n        },\r\n      ],\r\n    };\r\n\r\n    const tvGenreList = {\r\n      genres: [\r\n        {\r\n          id: 10759,\r\n          name: 'Action & Adventure',\r\n        },\r\n        {\r\n          id: 16,\r\n          name: 'Animation',\r\n        },\r\n        {\r\n          id: 35,\r\n          name: 'Comedy',\r\n        },\r\n        {\r\n          id: 80,\r\n          name: 'Crime',\r\n        },\r\n        {\r\n          id: 99,\r\n          name: 'Documentary',\r\n        },\r\n        {\r\n          id: 18,\r\n          name: 'Drama',\r\n        },\r\n        {\r\n          id: 10751,\r\n          name: 'Family',\r\n        },\r\n        {\r\n          id: 10762,\r\n          name: 'Kids',\r\n        },\r\n        {\r\n          id: 9648,\r\n          name: 'Mystery',\r\n        },\r\n        {\r\n          id: 10763,\r\n          name: 'News',\r\n        },\r\n        {\r\n          id: 10764,\r\n          name: 'Reality',\r\n        },\r\n        {\r\n          id: 10765,\r\n          name: 'Sci-Fi & Fantasy',\r\n        },\r\n        {\r\n          id: 10766,\r\n          name: 'Soap',\r\n        },\r\n        {\r\n          id: 10767,\r\n          name: 'Talk',\r\n        },\r\n        {\r\n          id: 10768,\r\n          name: 'War & Politics',\r\n        },\r\n        {\r\n          id: 37,\r\n          name: 'Western',\r\n        },\r\n      ],\r\n    };\r\n\r\n    let background;\r\n    if (type === 'movie') {\r\n      background = moviesUpcoming.slice(0, 3) || [];\r\n\r\n      if (background && moviesGenreList.genres) {\r\n        background.forEach((item) => {\r\n          item.genre_ids = moviesGenreList.genres\r\n            .filter((x) => x.id === item.genre_ids[0])\r\n            .map((x) => movieGenres.push(x.name));\r\n          movieTitle.push(item.title);\r\n          movieYear.push(item.release_date.slice(0, 4));\r\n          moviePicture.push(item.backdrop_path || item.poster_path);\r\n          movieRating.push(item.vote_average.toFixed(1));\r\n          movieId.push(item.id);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (type === 'tv') {\r\n      background = tvAiringToday.slice(0, 3) || [];\r\n\r\n      if (background && tvGenreList.genres) {\r\n        background.forEach((item) => {\r\n          item.genre_ids = tvGenreList.genres\r\n            .filter((x) => x.id === item.genre_ids[0])\r\n            .map((x) => tvGenres.push(x.name));\r\n          tvTitle.push(item.name);\r\n          tvYear.push(item.first_air_date.slice(0, 4));\r\n          tvPicture.push(item.backdrop_path || item.poster_path);\r\n          tvRating.push(item.vote_average.toFixed(1));\r\n          tvId.push(item.id);\r\n        });\r\n      }\r\n    }\r\n    return background;\r\n  };\r\n\r\n  handleBackground();\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className='header'>\r\n          {type === 'movie' ? (\r\n            <div className='main_container_header'>\r\n              <div className='container-content'>\r\n                <Slider {...settings}>\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${movieId[0]}`,\r\n                        state: { id: movieId[0] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[0]}\r\n                        alt={movieTitle[0]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[0]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[0]} | {movieYear[0]} | {movieRating[0]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${movieId[1]}`,\r\n                        state: { id: movieId[1] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[1]}\r\n                        alt={movieTitle[1]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[1]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[1]} | {movieYear[1]} | {movieRating[1]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${movieId[2]}`,\r\n                        state: { id: movieId[2] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + moviePicture[2]}\r\n                        alt={movieTitle[2]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Upcoming</span>\r\n                        <span className='header-title-name'>\r\n                          {movieTitle[2]}\r\n                        </span>\r\n                        <span className='header-year-rating'>\r\n                          {movieGenres[2]} | {movieYear[2]} | {movieRating[2]}{' '}\r\n                          Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {type === 'tv' ? (\r\n            <div className='main_container_header'>\r\n              <div className='container-content'>\r\n                <Slider {...settings}>\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/tv/${tvId[0]}`,\r\n                        state: { id: tvId[0] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[0]}\r\n                        alt={tvTitle[0]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[0]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[0]} | {tvYear[0]} | {tvRating[0]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/tv/${tvId[1]}`,\r\n                        state: { id: tvId[1] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[1]}\r\n                        alt={tvTitle[1]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[1]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[1]} | {tvYear[1]} | {tvRating[1]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='header-item'>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/tv/${tvId[2]}`,\r\n                        state: { id: tvId[2] },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={MOVIE_BACKDROP + tvPicture[2]}\r\n                        alt={tvTitle[2]}\r\n                      />\r\n                      <div className='item-text'>\r\n                        <span className='header-title'>Airing Today</span>\r\n                        <span className='header-title-name'>{tvTitle[2]}</span>\r\n                        <span className='header-year-rating'>\r\n                          {tvGenres[2]} | {tvYear[2]} | {tvRating[2]} Rating\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport './Controller.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\n\r\nconst Controller = () => {\r\n  const { type, handleMovies, handleTV, loading } = useContext(MovieContext);\r\n  const [, setData] = useState(MovieContext);\r\n\r\n  useEffect(() => {\r\n    if (!type) {\r\n      localStorage.setItem('type', type) || handleMovies();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (type === 'movie') {\r\n      handleMovies();\r\n    } else if (type === 'tv') {\r\n      handleTV();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className='MoviesOrTv container'>\r\n          <button\r\n            className={` btn btn-outline-primary ${\r\n              type === 'movie' ? 'btn-selected' : null\r\n            }`}\r\n            onClick={() => {\r\n              handleMovies();\r\n              setData({ type: 'movie' });\r\n            }}\r\n          >\r\n            MOVIES\r\n          </button>\r\n          <button\r\n            className={` btn btn-outline-primary ${\r\n              type === 'tv' ? 'btn-selected' : null\r\n            }`}\r\n            onClick={() => {\r\n              handleTV();\r\n              setData({ type: 'tv' });\r\n            }}\r\n          >\r\n            TV SHOWS\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport settings from '../settings/settings';\r\n\r\nimport Slider from 'react-slick';\r\nimport { IoIosStar } from 'react-icons/io';\r\nimport { HiClock } from 'react-icons/hi';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst MainPageContainers = ({ title, movies, type }) => {\r\n  const movieOrTv = (prop) =>\r\n    type === 'movie' ? `/movie/${prop.id}` : `/tv/${prop.id}`;\r\n\r\n  return (\r\n    <div className='main_container'>\r\n      <div className='container-header'>\r\n        <h2 className='container-header--title'>{title}</h2>\r\n      </div>\r\n      <div className='container-content'>\r\n        <Slider {...settings}>\r\n          {movies.map((content) => (\r\n            <div className='item' key={content.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${movieOrTv(content)}`,\r\n                  state: { id: content.id },\r\n                }}\r\n              >\r\n                <img\r\n                  src={'https://image.tmdb.org/t/p/w300' + content.poster_path}\r\n                  alt={content.name}\r\n                />\r\n              </Link>\r\n              <div className='item-footer'>\r\n                <p>\r\n                  <span>\r\n                    <HiClock />\r\n                    {type === 'movie'\r\n                      ? content.release_date && content.release_date.slice(0, 4)\r\n                      : type === 'tv'\r\n                      ? content.first_air_date &&\r\n                        content.first_air_date.slice(0, 4)\r\n                      : 'N/A'}\r\n                  </span>\r\n                  <span>\r\n                    <IoIosStar /> {content.vote_average.toFixed(1) || 0}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPageContainers;\r\n","import { useContext } from 'react';\r\nimport './MainContainer.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\nimport MainPageContainers from '../shared/MainPageContainers/MainPageContainers';\r\n\r\nconst MainContainer = () => {\r\n  const {\r\n    moviesUpcoming,\r\n    moviesPopular,\r\n    moviesNowPlaying,\r\n    moviesTopRated,\r\n    tvAiringToday,\r\n    tvPopular,\r\n    tvOnTheAir,\r\n    tvTopRated,\r\n    type,\r\n    loading,\r\n  } = useContext(MovieContext);\r\n\r\n  let content;\r\n  if (type === 'movie') {\r\n    content = (\r\n      <>\r\n        <MainPageContainers\r\n          movies={moviesUpcoming}\r\n          title='Upcoming'\r\n          type='movie'\r\n        />\r\n        <MainPageContainers\r\n          movies={moviesPopular}\r\n          title='Popular'\r\n          type='movie'\r\n        />\r\n        <MainPageContainers\r\n          movies={moviesNowPlaying}\r\n          title='Now Playing'\r\n          type='movie'\r\n        />\r\n        <MainPageContainers\r\n          movies={moviesTopRated}\r\n          title='Top Rated'\r\n          type='movie'\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  if (type === 'tv') {\r\n    content = (\r\n      <>\r\n        <MainPageContainers\r\n          movies={tvAiringToday}\r\n          title='Airing Today'\r\n          type='tv'\r\n        />\r\n        <MainPageContainers movies={tvPopular} title='Popular' type='tv' />\r\n        <MainPageContainers movies={tvOnTheAir} title='On The Air' type='tv' />\r\n        <MainPageContainers movies={tvTopRated} title='Top Rated' type='tv' />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='content container'>{loading === true ? content : null}</div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport Controller from '../Controller/Controller';\r\nimport MainContainer from '../MainContainer/MainContainer';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Controller />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    autoplay: false,\r\n    speed: 3000,\r\n    autoplaySpeed: 2000,\r\n    pauseOnHover: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 576,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  export default settings;"],"names":["MOVIE_BACKDROP","Header","moviesUpcoming","tvAiringToday","type","loading","useContext","MovieContext","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","pauseOnHover","responsive","breakpoint","movieGenres","movieTitle","moviePicture","movieYear","movieRating","movieId","tvGenres","tvTitle","tvPicture","tvYear","tvRating","tvId","handleBackground","moviesGenreList","genres","id","name","tvGenreList","background","slice","forEach","item","genre_ids","filter","x","map","push","title","release_date","backdrop_path","poster_path","vote_average","toFixed","first_air_date","_jsx","_Fragment","children","_jsxs","className","Slider","Link","to","pathname","state","src","alt","Loader","Controller","handleMovies","handleTV","setData","useState","useEffect","localStorage","setItem","onClick","_ref","movies","content","prop","HiClock","IoIosStar","MainContainer","moviesPopular","moviesNowPlaying","moviesTopRated","tvPopular","tvOnTheAir","tvTopRated","MainPageContainers","Homepage"],"sourceRoot":""}