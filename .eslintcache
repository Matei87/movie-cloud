[{"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\index.js":"1","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\App.js":"2","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\context\\MovieState.js":"3","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\ScrollToTop\\ScrollToTop.js":"4","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Loader\\Loader.js":"5","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Navbar\\Navbar.js":"6","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsMovie\\DetailsMovie.js":"7","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsTv\\DetailsTv.js":"9","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Homepage\\Homepage.js":"10","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieUpcoming.js":"11","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMoviePopular.js":"12","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvAiringToday.js":"13","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieTopRated.js":"14","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvOnTheAir.js":"15","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvPopular.js":"16","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieTrendingWeek.js":"17","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieNowPlaying.js":"18","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTrendingWeek.js":"19","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTrendingDay.js":"20","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTopRated.js":"21","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Search\\Search.js":"22","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsPerson\\DetailsPerson.js":"23","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Discover\\Discover.js":"24","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\context\\MovieContext.js":"25","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\MoviesController\\MoviesController.js":"26","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Header\\Header.js":"27","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\MovieTvContainer\\MovieTvContainer.js":"28"},{"size":146,"mtime":1601392970091,"results":"29","hashOfConfig":"30"},{"size":5246,"mtime":1607728483006,"results":"31","hashOfConfig":"30"},{"size":5072,"mtime":1605601454948,"results":"32","hashOfConfig":"30"},{"size":328,"mtime":1604785557099,"results":"33","hashOfConfig":"30"},{"size":224,"mtime":1603552115019,"results":"34","hashOfConfig":"30"},{"size":1892,"mtime":1609117449875,"results":"35","hashOfConfig":"30"},{"size":11323,"mtime":1605600706951,"results":"36","hashOfConfig":"30"},{"size":1503,"mtime":1609117470827,"results":"37","hashOfConfig":"30"},{"size":11144,"mtime":1605600724311,"results":"38","hashOfConfig":"30"},{"size":409,"mtime":1604889670239,"results":"39","hashOfConfig":"30"},{"size":2362,"mtime":1604884797031,"results":"40","hashOfConfig":"30"},{"size":2354,"mtime":1604884897513,"results":"41","hashOfConfig":"30"},{"size":2373,"mtime":1604884775985,"results":"42","hashOfConfig":"30"},{"size":2364,"mtime":1604884861927,"results":"43","hashOfConfig":"30"},{"size":2330,"mtime":1604884724773,"results":"44","hashOfConfig":"30"},{"size":2316,"mtime":1604884688241,"results":"45","hashOfConfig":"30"},{"size":2424,"mtime":1604884818279,"results":"46","hashOfConfig":"30"},{"size":2386,"mtime":1604884937069,"results":"47","hashOfConfig":"30"},{"size":2373,"mtime":1604884582233,"results":"48","hashOfConfig":"30"},{"size":2400,"mtime":1604884578390,"results":"49","hashOfConfig":"30"},{"size":2328,"mtime":1604884647955,"results":"50","hashOfConfig":"30"},{"size":3825,"mtime":1603540200802,"results":"51","hashOfConfig":"30"},{"size":9366,"mtime":1604885331880,"results":"52","hashOfConfig":"30"},{"size":13859,"mtime":1604884325252,"results":"53","hashOfConfig":"30"},{"size":141,"mtime":1601722157390,"results":"54","hashOfConfig":"30"},{"size":1321,"mtime":1604889307444,"results":"55","hashOfConfig":"30"},{"size":13210,"mtime":1604889628047,"results":"56","hashOfConfig":"30"},{"size":13910,"mtime":1604890025991,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"tljyeg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\index.js",[],["121","122"],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\App.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\context\\MovieState.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\ScrollToTop\\ScrollToTop.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsMovie\\DetailsMovie.js",["123","124"],"import React, { useEffect, useState } from 'react';\r\nimport '../DetailsTv/DetailsTv.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\nconst DetailsMovie = (props) => {\r\n    const { id } = props.match.params;\r\n    const [detailsMovie, setDetailsMovie] = useState({\r\n        //movies\r\n        backdrop_path_movie: '',\r\n        poster_path_movie: '',\r\n        genres_movie: '',\r\n        title_movie: '',\r\n        vote_average_movie: '',\r\n        vote_count_movie: '',\r\n        release_date_movie: '',\r\n        runtime_movie: '',\r\n        original_language_movie: '',\r\n        tagline: '',\r\n        overview_movie: '',\r\n\r\n        //cast\r\n        cast: [],\r\n\r\n        //trailers\r\n        trailers: [],\r\n\r\n        //reviews\r\n        reviews: [],\r\n\r\n        //loading\r\n        loading: false\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchDetails();\r\n    }, []);\r\n\r\n    const fetchDetails = async () => {\r\n        const urlMovieReviews = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n        const urlMovieVideo = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const urlMovieCast = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}`;\r\n        const urlMovie = `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const request = [\r\n            fetch(urlMovie),\r\n            fetch(urlMovieCast),\r\n            fetch(urlMovieVideo),\r\n            fetch(urlMovieReviews)\r\n        ];\r\n        const response = await Promise.all(request);\r\n        const data = await Promise.all(response.map(res => res.json()));\r\n        //console.log(data);\r\n        setDetailsMovie({\r\n            backdrop_path_movie: data[0].backdrop_path, genres_movie: data[0].genres,\r\n            title_movie: data[0].title, tagline: data[0].tagline, vote_average_movie: data[0].vote_average, vote_count_movie: data[0].vote_count,\r\n            release_date_movie: data[0].release_date, runtime_movie: data[0].runtime, original_language_movie: data[0].original_language,\r\n            overview_movie: data[0].overview, poster_path_movie: data[0].poster_path, cast: data[1].cast, trailers: data[2].results,\r\n            reviews: data[3].results, loading: true\r\n        });\r\n    }\r\n\r\n    const { backdrop_path_movie, genres_movie, title_movie, vote_average_movie, vote_count_movie, release_date_movie,\r\n        runtime_movie, original_language_movie, tagline, overview_movie, poster_path_movie, cast, trailers, reviews, loading } = detailsMovie;\r\n\r\n    let genMovie = [];\r\n    if (genres_movie) {\r\n        for (let genre of genres_movie) {\r\n            genMovie.push(genre['name'])\r\n        }\r\n    }\r\n    let finishMovie = genMovie.slice(0, 2).join(' | ');\r\n\r\n    let backgroundMovie = backdrop_path_movie || poster_path_movie;\r\n\r\n    const slicedTrailers = trailers.slice(0, 3);\r\n\r\n    //console.log(trailers);\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    const settingsvideo = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    let content;\r\n\r\n    if (tagline === '' || tagline) {\r\n        content = (\r\n            <div id=\"details\">\r\n\r\n                < div className=\"details-header\">\r\n                    <div className=\"details-header-image\">\r\n                        <img src={backgroundMovie === null ? theatre : 'https://image.tmdb.org/t/p/w1280' + backgroundMovie}\r\n                            alt={title_movie} />\r\n                    </div>\r\n                    <div className=\"details-header-details\">\r\n                        <span className=\"details-header-details-title\">{title_movie}</span>\r\n                        <span className=\"details-header-details-genres\">{finishMovie}</span>\r\n                        <span className=\"details-header-details-runtime-rating\">\r\n                            {release_date_movie ? <>{(release_date_movie).split('-').reverse().join('/')} | </> : null}\r\n                            {runtime_movie ? <>{`${runtime_movie} mins | `}</> : null}\r\n                            {original_language_movie ? <>{(original_language_movie).toUpperCase()} | </> : null}\r\n                            {vote_average_movie ? vote_average_movie : null} {vote_count_movie ? <>{`(${vote_count_movie})`}</> : null}\r\n                        </span>\r\n                        <span className=\"details-header-details-tagline\">{tagline || ''}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"details-content container\">\r\n                    {overview_movie.length > 0 ? <div className=\"details-content-overview\">\r\n                        <h2 className=\"details-content-overview-title\">OVERVIEW</h2>\r\n                        <p className=\"details-content-overview-content\">\r\n                            {overview_movie}\r\n                        </p>\r\n                    </div> : null}\r\n\r\n                    {cast.length > 0 ? <div className=\"details-content-cast\">\r\n                        <div className=\"details-content-cast-header\">\r\n                            <h2 className=\"details-content-cast-title\">CAST</h2>\r\n                        </div>\r\n                        <div className=\"details-content-cast-content\">\r\n                            <Slider {...settings}>\r\n                                {cast.map(content =>\r\n\r\n                                    <div className=\"details-content-cast-item\" key={content.id}>\r\n                                        <Link to={{\r\n                                            pathname: `/details/person/${content.id}`,\r\n                                            state: { id: content.id }\r\n                                        }}>\r\n                                            <img src={content.profile_path === null ? pic : 'https://image.tmdb.org/t/p/w300' + content.profile_path} alt={content.name} />\r\n                                        </Link>\r\n                                        <div className=\"details-content-cast-item-footer\">\r\n                                            <p>{content.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    {trailers.length > 0 ? <div className=\"details-content-trailers\">\r\n                        <div className=\"details-content-trailers-header\">\r\n                            <h2 className=\"details-content-trailers-title\">TRAILERS</h2>\r\n                        </div>\r\n                        <div className=\"details-content-trailers-content\">\r\n                            <Slider {...settingsvideo}>\r\n                                {slicedTrailers.map(content =>\r\n                                    <div className=\"details-content-trailers-item\" key={content.key}>\r\n                                        <iframe src={'https://www.youtube.com/embed/' + content.key} title={content.key} />\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    {reviews.length > 0 ? <div className=\"details-content-reviews\">\r\n                        <div className=\"details-content-reviews-header\">\r\n                            <h2 className=\"details-content-reviews-title\">REVIEWS</h2>\r\n                        </div>\r\n                        <div className=\"details-content-reviews-content\">\r\n                            {reviews.map(review => (\r\n                                <div className=\"details-content-review-item\" key={review.author}>\r\n                                    <h4 className=\"details-content-review-item-title\">{review.author}</h4>\r\n                                    <p className=\"details-content-review-item-content\">{review.content.length > 300 ? (review.content).slice(0, 300) : review.content}...</p>\r\n                                    <a href={review.url}>View full review</a>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div> : <div className=\"details-content-reviews\">\r\n                            <div className=\"details-content-reviews-header\">\r\n                                <h2 className=\"details-content-reviews-title\">REVIEWS</h2>\r\n                            </div>\r\n                            <div className=\"details-content-reviews-content\">\r\n                                <div className=\"details-content-review-item\">\r\n                                    <p className=\"details-content-review-item-content\">There are no reviews for this movie.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (<>{content}</>)\r\n}\r\n\r\nexport default DetailsMovie;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsTv\\DetailsTv.js",["125","126"],"import React, { useEffect, useState } from 'react';\r\nimport './DetailsTv.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\nconst DetailsTv = (props) => {\r\n    const { id } = props.match.params;\r\n    const [detailsTv, setDetailsTv] = useState({\r\n        //tv\r\n        backdrop_path_tv: '',\r\n        poster_path_tv: '',\r\n        genres_tv: '',\r\n        title_tv: '',\r\n        vote_average_tv: '',\r\n        vote_count_tv: '',\r\n        original_language_tv: '',\r\n        episode_run_time_tv: '',\r\n        first_air_date_tv: '',\r\n        overview_tv: '',\r\n        taglineTV: '',\r\n\r\n        //cast\r\n        cast: [],\r\n\r\n        //trailers\r\n        trailers: [],\r\n\r\n        //reviews\r\n        reviews: [],\r\n\r\n        //loading\r\n        loading: false\r\n\r\n    });\r\n    useEffect(() => {\r\n        fetchDetailsTv();\r\n    }, []);\r\n\r\n    const fetchDetailsTv = async () => {\r\n        const urlTvReviews = `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n        const urlTvVideo = `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const urlTvCast = `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const urlTv = `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n\r\n        const request = [\r\n            fetch(urlTv),\r\n            fetch(urlTvCast),\r\n            fetch(urlTvVideo),\r\n            fetch(urlTvReviews)\r\n        ];\r\n        const response = await Promise.all(request);\r\n        const data = await Promise.all(response.map(res => res.json()));\r\n        //console.log(data[0]);\r\n        setDetailsTv({\r\n            backdrop_path_tv: data[0].backdrop_path, genres_tv: data[0].genres, episode_run_time_tv: data[0].episode_run_time,\r\n            title_tv: data[0].name, vote_average_tv: data[0].vote_average, vote_count_tv: data[0].vote_count,\r\n            first_air_date_tv: data[0].first_air_date, original_language_tv: data[0].original_language, overview_tv: data[0].overview,\r\n            poster_path_tv: data[0].poster_path, taglineTV: data[0].tagline, cast: data[1].cast, trailers: data[2].results,\r\n            reviews: data[3].results, loading: true\r\n        });\r\n    };\r\n\r\n    const { backdrop_path_tv, genres_tv, title_tv, vote_average_tv, vote_count_tv, original_language_tv,\r\n        episode_run_time_tv, first_air_date_tv, overview_tv, poster_path_tv, taglineTV, cast, trailers, reviews, loading } = detailsTv;\r\n\r\n\r\n    let genTv = [];\r\n    if (genres_tv) {\r\n        for (let genre of genres_tv) {\r\n            genTv.push(genre['name']);\r\n        }\r\n    }\r\n    let finishTv = genTv.slice(0, 2).join(' | ');\r\n\r\n    let backgroundTv = backdrop_path_tv || poster_path_tv;\r\n\r\n    //console.log(reviews);\r\n    const slicedTrailers = trailers.slice(0, 3);\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    const settingsvideo = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: trailers.length > 2 ? 2 : trailers.length,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    //console.log(taglineTV);\r\n    let content;\r\n    if (taglineTV === '' || taglineTV) {\r\n        content = (\r\n            <div id=\"details\">\r\n\r\n                < div className=\"details-header\">\r\n                    <div className=\"details-header-image\">\r\n                        <img src={backgroundTv === null ? theatre : 'https://image.tmdb.org/t/p/w1280' + backgroundTv}\r\n                            alt={title_tv} />\r\n                    </div>\r\n                    <div className=\"details-header-details\">\r\n                        <span className=\"details-header-details-title\">{title_tv}</span>\r\n                        <span className=\"details-header-details-genres\">{finishTv}</span>\r\n                        <span className=\"details-header-details-runtime-rating\">\r\n                            {first_air_date_tv ? <>{(first_air_date_tv).split('-').reverse().join('/')} | </> : null}\r\n                            {episode_run_time_tv.length > 0 ? <>{`${(episode_run_time_tv).slice(0, 1)} mins | `}</> : null}\r\n                            {original_language_tv ? <>{`${(original_language_tv).toUpperCase()} | `}</> : null}\r\n                            {vote_average_tv ? vote_average_tv : null} {vote_count_tv ? <>{`(${vote_count_tv})`}</> : null}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"details-content container\">\r\n                    {overview_tv.length > 0 ? <div className=\"details-content-overview\">\r\n                        <h2 className=\"details-content-overview-title\">OVERVIEW</h2>\r\n                        <p className=\"details-content-overview-content\">\r\n                            {overview_tv}\r\n                        </p>\r\n                    </div> : null}\r\n\r\n                    {cast.length > 0 ? <div className=\"details-content-cast\">\r\n                        <div className=\"details-content-cast-header\">\r\n                            <h2 className=\"details-content-cast-title\">CAST</h2>\r\n                        </div>\r\n                        <div className=\"details-content-cast-content\">\r\n                            <Slider {...settings}>\r\n                                {cast.map(content =>\r\n                                    <div className=\"details-content-cast-item\" key={content.id}>\r\n                                        <Link to={{\r\n                                            pathname: `/details/person/${content.id}`,\r\n                                            state: { id: content.id }\r\n                                        }}>\r\n                                            <img src={content.profile_path === null ? pic : 'https://image.tmdb.org/t/p/w300' + content.profile_path} alt={content.name} />\r\n                                        </Link>\r\n                                        <div className=\"details-content-cast-item-footer\">\r\n                                            <p>{content.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    {trailers.length > 0 ? <div className=\"details-content-trailers\">\r\n                        <div className=\"details-content-trailers-header\">\r\n                            <h2 className=\"details-content-trailers-title\">TRAILERS</h2>\r\n                        </div>\r\n                        <div className=\"details-content-trailers-content\">\r\n                            <Slider {...settingsvideo}>\r\n                                {slicedTrailers.map(content =>\r\n                                    <div className=\"details-content-trailers-item\" key={content.key}>\r\n                                        <iframe src={`https://www.youtube.com/embed/${content.key}`} title={content.key} />\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    {reviews.length > 0 ? <div className=\"details-content-reviews\">\r\n                        <div className=\"details-content-reviews-header\">\r\n                            <h2 className=\"details-content-reviews-title\">REVIEWS</h2>\r\n                        </div>\r\n                        <div className=\"details-content-reviews-content\">\r\n                            {reviews.map(review => (\r\n                                <div className=\"details-content-review-item\" key={review.url}>\r\n                                    <h4 className=\"details-content-review-item-title\">{review.author}</h4>\r\n                                    <p className=\"details-content-review-item-content\">{review.content.length > 300 ? (review.content).slice(0, 300) : review.content}...</p>\r\n                                    <a href={review.url}>View full review</a>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div> : <div className=\"details-content-reviews\">\r\n                            <div className=\"details-content-reviews-header\">\r\n                                <h2 className=\"details-content-reviews-title\">REVIEWS</h2>\r\n                            </div>\r\n                            <div className=\"details-content-reviews-content\">\r\n                                <div className=\"details-content-review-item\">\r\n                                    <p className=\"details-content-review-item-content\">There are no reviews for this TV Show.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                </div>\r\n\r\n            </div >\r\n        );\r\n    }\r\n\r\n    return (<>{content}</>)\r\n}\r\n\r\nexport default DetailsTv;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Homepage\\Homepage.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieUpcoming.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMoviePopular.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvAiringToday.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieTopRated.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvOnTheAir.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvPopular.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieTrendingWeek.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverMovieNowPlaying.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTrendingWeek.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTrendingDay.js",["127"],"import React, { useState, useEffect } from 'react';\r\nimport './DiscoverItems.css';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport { IoIosStar } from \"react-icons/io\";\r\nimport { HiClock } from \"react-icons/hi\";\r\nimport { Link } from 'react-router-dom';\r\nimport defaultmovie from '../../pictures/defaultmovie.png';\r\n\r\nconst DiscoverTvTrendingDay = () => {\r\n    const [data, setData] = useState({\r\n        tvTrendingDay: []\r\n    });\r\n\r\n    const handleTV = async () => {\r\n        try {\r\n            const TV_URL_TRENDINGDAY = `https://api.themoviedb.org/3/trending/tv/day?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n            const response = await fetch(TV_URL_TRENDINGDAY);\r\n            const data = await response.json();\r\n            setData({ tvTrendingDay: data.results });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleTV();\r\n    }, []);\r\n\r\n    const { tvTrendingDay } = data;\r\n\r\n    return (\r\n        <div id=\"discover-item\" className=\"container\">\r\n\r\n            <div className=\"discover-header\">\r\n                <h1>TV SHOWS TRENDING TODAY</h1>\r\n            </div>\r\n\r\n            <div className=\"discover-content\">\r\n                {tvTrendingDay.map(content => (\r\n                    <div className=\"discover-content-item\" key={content.id}>\r\n                        <Link to={{\r\n                            pathname: `/details/tv/${content.id}`,\r\n                            state: { id: content.id }\r\n                        }}>\r\n                            <img src={content.backdrop_path || content.poster_path ? `https://image.tmdb.org/t/p/w200${content.poster_path || content.backdrop_path}` : defaultmovie} alt={content.original_title} />\r\n                        </Link>\r\n                        <div className=\"discover-content-item-footer\">\r\n                            <p>\r\n                                {content.first_air_date ? <span className=\"HiClock\"><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                {content.vote_average !== null ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiscoverTvTrendingDay;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DiscoverItems\\DiscoverTvTopRated.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Search\\Search.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\DetailsPerson\\DetailsPerson.js",["128","129"],"import React, { useEffect, useState } from 'react';\r\nimport './DetailsPerson.css';\r\n\r\nimport theatre from '../../pictures/theatre.jpg';\r\nimport pic from '../../pictures/default.png';\r\nimport defaultmovie from '../../pictures/defaultmovie.png';\r\n\r\nimport { IoIosStar } from \"react-icons/io\";\r\nimport { HiClock } from \"react-icons/hi\";\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\nconst DetailsPerson = (props) => {\r\n    const [data, setData] = useState({\r\n        name: '',\r\n        birthday: '',\r\n        known_for: '',\r\n        biography: '',\r\n        place_of_birth: '',\r\n        picture: '',\r\n\r\n        //movie credits\r\n        movie_credits: [],\r\n\r\n        //tv credits\r\n        tv_credits: [],\r\n\r\n        //loading\r\n        loading: false\r\n\r\n    });\r\n\r\n    const { id } = props.match.params;\r\n\r\n    useEffect(() => {\r\n        fetchPersonDetails();\r\n    }, []);\r\n\r\n    const fetchPersonDetails = async () => {\r\n        const urlPersonDetails = `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const urlMovieCredits = `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const urlTvCredits = `https://api.themoviedb.org/3/person/${id}/tv_credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\r\n        const request = [\r\n            fetch(urlPersonDetails),\r\n            fetch(urlMovieCredits),\r\n            fetch(urlTvCredits)\r\n        ];\r\n        const response = await Promise.all(request);\r\n        const data = await Promise.all(response.map(res => res.json()));\r\n        //console.log(data);\r\n        setData({\r\n            name: data[0].name, biography: data[0].biography, birthday: data[0].birthday,\r\n            known_for: data[0].known_for_department, place_of_birth: data[0].place_of_birth,\r\n            picture: data[0].profile_path, movie_credits: data[1].cast, tv_credits: data[2].cast, loading: true\r\n        });\r\n    }\r\n\r\n    const { name, biography, birthday, known_for, place_of_birth, picture, movie_credits, tv_credits, loading } = data;\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    let content;\r\n\r\n    content = (\r\n        <div id=\"person-details\">\r\n\r\n            <div className=\"person-details-header\">\r\n\r\n                <div className=\"person-details-header-image\">\r\n                    <img src={theatre} alt=\"theatre\" />\r\n                </div>\r\n\r\n                <div className=\"person-details-header-content\">\r\n                    <div className=\"person-details-header-content-picture\">\r\n                        <img src={picture ? 'https://image.tmdb.org/t/p/w200' + picture : pic} alt={name} />\r\n                    </div>\r\n                    <div className=\"person-details-header-content-details\">\r\n                        <span className=\"person-details-header-content-details-title\">{name}</span>\r\n                        <span className=\"person-details-header-content-details-known_for\">{known_for ? `Known for: ${known_for}` : null}</span>\r\n                        <span className=\"person-details-header-content-details-birthday\">{birthday ? `Date of birth: ${birthday.split('-').reverse().join('/')}` : null}</span>\r\n                        <span className=\"person-details-header-content-details-place_of_birth\">{place_of_birth ? `Place of birth: ${place_of_birth}` : null}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"person-details-content container\">\r\n\r\n                {biography.length > 0 ? <div className=\"person-details-content-biography\">\r\n                    <h2 className=\"person-details-content-biography-title\">BIOGRAPHY</h2>\r\n                    <p className=\"person-details-content-biography-content\">{biography}</p>\r\n                </div> : null}\r\n\r\n                {movie_credits.length > 0 ? <div className=\"person-details-content-cast-movies\">\r\n                    <div className=\"person-details-content-cast-movies-header\">\r\n                        <h2 className=\"person-details-content-cast-movies-title\">MOVIE CREDITS</h2>\r\n                    </div>\r\n                    <div className=\"person-details-content-cast-movies-content\">\r\n                        <Slider {...settings}>\r\n                            {movie_credits.map(content =>\r\n                                <div className=\"person-details-content-cast-movies-cast-item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/movie/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={content.backdrop_path || content.poster_path ? `https://image.tmdb.org/t/p/w200${content.poster_path || content.backdrop_path}` : defaultmovie} alt={content.original_title} />\r\n                                    </Link>\r\n                                    <div className=\"person-details-content-cast-movies-cast-item-footer\">\r\n                                        <p>\r\n                                            {content.release_date ? <span className=\"HiClock\"><HiClock /> {(content.release_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div> : null}\r\n\r\n                {tv_credits.length > 0 ? <div className=\"person-details-content-cast-tv\">\r\n                    <div className=\"person-details-content-cast-tv-header\">\r\n                        <h2 className=\"person-details-content-cast-tv-title\">TV CREDITS</h2>\r\n                    </div>\r\n                    <div className=\"person-details-content-cast-tv-content\">\r\n                        <Slider {...settings}>\r\n                            {tv_credits.map(content =>\r\n                                <div className=\"person-details-content-cast-tv-cast-item\" key={content.id}>\r\n                                    <Link to={{\r\n                                        pathname: `/details/tv/${content.id}`,\r\n                                        state: { id: content.id }\r\n                                    }}>\r\n                                        <img src={content.backdrop_path || content.poster_path ? `https://image.tmdb.org/t/p/w200${content.poster_path || content.backdrop_path}` : defaultmovie} alt={content.original_title} />\r\n                                    </Link>\r\n                                    <div className=\"person-details-content-cast-tv-cast-item-footer\">\r\n                                        <p>\r\n                                            {content.first_air_date.length > 0 ? <span className=\"HiClock\"><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                            {content.vote_average ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n                </div> : null}\r\n\r\n                <div className=\"person-details-content-reviews\">\r\n                    <div className=\"person-details-content-reviews-header\">\r\n                        <h2 className=\"person-details-content-reviews-title\">COMMENTS</h2>\r\n                    </div>\r\n                    <div className=\"person-details-content-reviews-content\">\r\n                        <div className=\"person-details-content-review-item\">\r\n                            <p className=\"person-details-content-review-item-content\">There are no reviews for this person.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n    return (<>{content}</>);\r\n}\r\n\r\nexport default DetailsPerson;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Discover\\Discover.js",["130"],"import React, { useEffect, useState } from 'react';\r\nimport './Discover.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { IoIosTrendingUp, IoIosPlay, IoIosTrophy, IoIosStar } from \"react-icons/io\";\r\nimport { HiClock } from \"react-icons/hi\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\nconst Discover = () => {\r\n    const [data, setData] = useState({\r\n        all: [],\r\n        movieTrendingWeek: [],\r\n        tvTrendingWeek: [],\r\n        tvTrendingDay: []\r\n    })\r\n\r\n    //MOVIE TRENDING URLS\r\n    const MOVIE_TRENDINGWEEK = `https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n    //TV TRENDING URLS\r\n    const TV_TRENDINGWEEK = `https://api.themoviedb.org/3/trending/tv/week?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n    const TV_TRENDINGDAY = `https://api.themoviedb.org/3/trending/tv/day?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\r\n\r\n    // ALL ***\r\n    const handleAll = async () => {\r\n        try {\r\n            const request = [\r\n                fetch(MOVIE_TRENDINGWEEK),\r\n\r\n                fetch(TV_TRENDINGWEEK),\r\n                fetch(TV_TRENDINGDAY),\r\n            ];\r\n            const response = await Promise.all(request);\r\n            const data = await Promise.all(response.map(res => res.json()));\r\n            //console.log(data);\r\n            setData({\r\n                movieTrendingWeek: data[0].results,\r\n                tvTrendingWeek: data[1].results, tvTrendingDay: data[2].results\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        handleAll();\r\n    }, []);\r\n\r\n    const sets = {\r\n        dots: false,\r\n        infinite: false,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: false,\r\n        speed: 3000,\r\n        autoplaySpeed: 2000,\r\n        pauseOnHover: false,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 992,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 576,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    const { movieTrendingWeek, tvTrendingWeek, tvTrendingDay } = data;\r\n\r\n    return (\r\n        <div id=\"discover\">\r\n\r\n            <div className=\"discover-trends\">\r\n                <div className=\"discover-trends-movies\">\r\n\r\n                    <div className='discover-trends-movies-main_container'>\r\n\r\n                        <div className='discover-trends-movies-container-header'>\r\n                            <span>MOVIES TRENDING THIS WEEK</span>\r\n                            <span>\r\n                                <Link to=\"/discover/movie/trending-week\">\r\n                                    SEE MORE\r\n                    </Link>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"discover-trends-movies-container-content\">\r\n                            <Slider {...sets}>\r\n                                {movieTrendingWeek.map(content =>\r\n                                    <div className=\"discover-trends-movies-container-item\" key={content.id}>\r\n                                        <img src={`https://image.tmdb.org/t/p/w1280${content.backdrop_path || content.poster_path}`} alt={content.title} />\r\n\r\n                                        <div className=\"discover-trends-movies-container-item-content\">\r\n                                            <Link to={{\r\n                                                pathname: `/details/movie/${content.id}`,\r\n                                                state: { id: content.id }\r\n                                            }}>\r\n                                                <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                            </Link>\r\n                                            <div className=\"discover-trends-movies-item-footer\">\r\n                                                <p>\r\n                                                    {content.release_date ? <span className=\"HiClock\"><HiClock /> {(content.release_date).slice(0, 4)}</span> : null}\r\n                                                    {content.vote_average ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"discover-trends-tv\">\r\n                    <div className='discover-trends-tv-main_container'>\r\n\r\n                        <div className='discover-trends-tv-container-header'>\r\n                            <span>TV SHOWS TRENDING THIS WEEK</span>\r\n                            <span>\r\n                                <Link to=\"/discover/tv/trending-week\">\r\n                                    SEE MORE\r\n                    </Link>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"discover-trends-tv-container-content\">\r\n                            <Slider {...sets}>\r\n                                {tvTrendingWeek.map(content =>\r\n                                    <div className=\"discover-trends-tv-container-item\" key={content.id}>\r\n                                        <img src={`https://image.tmdb.org/t/p/w1280${content.backdrop_path || content.poster_path}`} alt={content.title} />\r\n\r\n                                        <div className=\"discover-trends-tv-container-item-content\">\r\n                                            <Link to={{\r\n                                                pathname: `/details/tv/${content.id}`,\r\n                                                state: { id: content.id }\r\n                                            }}>\r\n                                                <img src={'https://image.tmdb.org/t/p/w300' + content.poster_path} alt={content.title} />\r\n                                            </Link>\r\n                                            <div className=\"discover-trends-tv-item-footer\">\r\n                                                <p>\r\n                                                    {content.first_air_date ? <span className=\"HiClock\"><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                                    {content.vote_average ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"discover-all\">\r\n                <Link to=\"/discover/movie/upcoming\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/4gKyQ1McHa8ZKDsYoyKQSevF01J.jpg\" alt=\"movie-upcoming\" />\r\n                    <div>\r\n                        <HiClock />\r\n                        <span>Upcoming Movies</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/movie/popular\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/zzWGRw277MNoCs3zhyG3YmYQsXv.jpg\" alt=\"movie-popular\" />\r\n                    <div>\r\n                        <IoIosTrendingUp />\r\n                        <span>Popular Movies</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/movie/now-playing\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/5UkzNSOK561c2QRy2Zr4AkADzLT.jpg\" alt=\"movie-now-playing\" />\r\n                    <div>\r\n                        <IoIosPlay />\r\n                        <span>Now Playing Movies</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/movie/top-rated\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/rSPw7tgCH9c6NqICZef4kZjFOQ5.jpg\" alt=\"movie-top-rated\" />\r\n                    <div>\r\n                        <IoIosTrophy />\r\n                        <span>Top Rated Movies</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/tv/airing-today\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/adZ9ldSlkGfLfsHNbh37ZThCcgU.jpg\" alt=\"tv-airing-today\" />\r\n                    <div>\r\n                        <IoIosPlay />\r\n                        <span>Airing Today TV Shows</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/tv/popular\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/hTExot1sfn7dHZjGrk0Aiwpntxt.jpg\" alt=\"tv-popular\" />\r\n                    <div>\r\n                        <IoIosTrendingUp />\r\n                        <span>Popular TV Shows</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/tv/on-the-air\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/58PON1OrnBiX6CqEHgeWKVwrCn6.jpg\" alt=\"tv-on-the-air\" />\r\n                    <div>\r\n                        <HiClock />\r\n                        <span>On The Air TV Shows</span>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/discover/tv/top-rated\" className=\"discover-all-item\">\r\n                    <img src=\"https://image.tmdb.org/t/p/w400/92OPBZpLc82y8CzOtrQ8P9RDvIN.jpg\" alt=\"tv-top-rated\" />\r\n                    <div>\r\n                        <IoIosTrophy />\r\n                        <span>Top Rated TV Shows</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"discover-tvtrending\">\r\n                <div className='discover-tvtrending-main_container'>\r\n\r\n                    <div className='discover-tvtrending-container-header'>\r\n                        <span>TV SHOWS TRENDING TODAY</span>\r\n                        <span>\r\n                            <Link to=\"discover/tv/trending-today\">\r\n                                SEE MORE\r\n                </Link>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"discover-tvtrending-container-content\">\r\n                        <Slider {...sets}>\r\n                            {tvTrendingDay.map(content =>\r\n                                <div className=\"discover-tvtrending-container-item\" key={content.id}>\r\n                                    <img src={`https://image.tmdb.org/t/p/w1280${content.backdrop_path || content.poster_path}`} alt={content.title} />\r\n\r\n                                    <div className=\"discover-tvtrending-container-item-content\">\r\n                                        <div className=\"discover-tvtrending-container-item-content-item\">\r\n                                            <Link to={{\r\n                                                pathname: `/details/tv/${content.id}`,\r\n                                                state: { id: content.id }\r\n                                            }}>\r\n                                                <img src={`https://image.tmdb.org/t/p/w1280${content.poster_path}`} alt={content.title} />\r\n                                            </Link>\r\n                                            <div className=\"discover-tvtrending-item-footer\">\r\n                                                <p>\r\n                                                    {content.first_air_date ? <span className=\"HiClock\"><HiClock /> {(content.first_air_date).slice(0, 4)}</span> : null}\r\n                                                    {content.vote_average ? <span className=\"IoIosStar\"><IoIosStar /> {((content.vote_average || 0))}</span> : null}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"discover-tvtrending-container-item-content-item-description\">\r\n                                            <span>{content.name}</span>\r\n                                            <span>{content.overview.split(' ').length > 30 ? content.overview.split(' ').slice(0, 20).join(' ') + '.' : content.overview}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )}\r\n                        </Slider>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Discover;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\context\\MovieContext.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\MoviesController\\MoviesController.js",["131","132","133"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport './MoviesController.css';\r\n\r\nimport MovieContext from '../../context/MovieContext';\r\n\r\n\r\nconst MoviesController = () => {\r\n    const { type, handleMovies, handleTV, loading } = useContext(MovieContext);\r\n    const [data, setData] = useState(MovieContext);\r\n\r\n    useEffect(() => {\r\n        if (!type) {\r\n            localStorage.setItem('type', type) || handleMovies();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (type === 'movie') {\r\n            handleMovies();\r\n        } else if (type === 'tv') {\r\n            handleTV();\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>{loading === true ?\r\n            <div className=\"MoviesOrTv container\">\r\n                <button className={` btn btn-outline-primary ${type === 'movie' ? 'btn-selected' : null}`}\r\n                    onClick={() => { handleMovies(); setData({ type: 'movie' }) }}\r\n                >\r\n                    MOVIES\r\n</button>\r\n                <button className={` btn btn-outline-primary ${type === 'tv' ? 'btn-selected' : null}`}\r\n                    onClick={() => { handleTV(); setData({ type: 'tv' }) }}\r\n                >\r\n                    TV SHOWS\r\n</button>\r\n            </div>\r\n            : null}</>\r\n    )\r\n}\r\n\r\nexport default MoviesController;","C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\Header\\Header.js",[],"C:\\Users\\YO\\Documents\\007\\CURSURI\\REACT\\movie-cloud\\src\\components\\MovieTvContainer\\MovieTvContainer.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":44,"column":8,"nodeType":"140","endLine":44,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":70,"column":118,"nodeType":"144","messageId":"145","endLine":70,"endColumn":125},{"ruleId":"138","severity":1,"message":"146","line":43,"column":8,"nodeType":"140","endLine":43,"endColumn":10,"suggestions":"147"},{"ruleId":"142","severity":1,"message":"143","line":70,"column":114,"nodeType":"144","messageId":"145","endLine":70,"endColumn":121},{"ruleId":"142","severity":1,"message":"148","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"149","line":40,"column":8,"nodeType":"140","endLine":40,"endColumn":10,"suggestions":"150"},{"ruleId":"142","severity":1,"message":"143","line":61,"column":103,"nodeType":"144","messageId":"145","endLine":61,"endColumn":110},{"ruleId":"138","severity":1,"message":"151","line":49,"column":8,"nodeType":"140","endLine":49,"endColumn":10,"suggestions":"152"},{"ruleId":"142","severity":1,"message":"153","line":9,"column":12,"nodeType":"144","messageId":"145","endLine":9,"endColumn":16},{"ruleId":"138","severity":1,"message":"154","line":15,"column":8,"nodeType":"140","endLine":15,"endColumn":10,"suggestions":"155"},{"ruleId":"138","severity":1,"message":"156","line":23,"column":8,"nodeType":"140","endLine":23,"endColumn":10,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchDetailsTv'. Either include it or remove the dependency array.",["161"],"'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPersonDetails'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'handleAll'. Either include it or remove the dependency array.",["163"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleMovies' and 'type'. Either include them or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'handleMovies', 'handleTV', and 'type'. Either include them or remove the dependency array.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [fetchDetails]",{"range":"178","text":"179"},"Update the dependencies array to be: [fetchDetailsTv]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchPersonDetails]",{"range":"182","text":"183"},"Update the dependencies array to be: [handleAll]",{"range":"184","text":"185"},"Update the dependencies array to be: [handleMovies, type]",{"range":"186","text":"187"},"Update the dependencies array to be: [handleMovies, handleTV, type]",{"range":"188","text":"189"},[1082,1084],"[fetchDetails]",[1041,1043],"[fetchDetailsTv]",[988,990],"[fetchPersonDetails]",[1761,1763],"[handleAll]",[461,463],"[handleMovies, type]",[634,636],"[handleMovies, handleTV, type]"]